{"/home/travis/build/npmtest/node-npmtest-openid-connect/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-openid-connect/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_openid_connect */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-openid-connect/lib.npmtest_openid_connect.js":{"path":"/home/travis/build/npmtest/node-npmtest-openid-connect/lib.npmtest_openid_connect.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":59}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":65}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_openid_connect */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_openid_connect = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_openid_connect = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-openid-connect/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-openid-connect/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":58}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":72},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-openid-connect && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_openid_connect */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_openid_connect","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_openid_connect.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_openid_connect.rollup.js'] =","            local.assetsDict['/assets.npmtest_openid_connect.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_openid_connect.__dirname + '/lib.npmtest_openid_connect.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-openid-connect/node_modules/openid-connect/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-openid-connect/node_modules/openid-connect/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":0,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":1,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":1,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":1,"461":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0,0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0,0],"102":[0,0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0},"fnMap":{"1":{"name":"(anonymous_1)","line":38,"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":47}}},"2":{"name":"(anonymous_2)","line":73,"loc":{"start":{"line":73,"column":38},"end":{"line":73,"column":58}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":34},"end":{"line":79,"column":57}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":34},"end":{"line":90,"column":57}}},"5":{"name":"(anonymous_5)","line":116,"loc":{"start":{"line":116,"column":34},"end":{"line":116,"column":57}}},"6":{"name":"parse_authorization","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":193,"column":44}}},"7":{"name":"OpenIDConnect","line":214,"loc":{"start":{"line":214,"column":0},"end":{"line":214,"column":32}}},"8":{"name":"(anonymous_8)","line":249,"loc":{"start":{"line":249,"column":31},"end":{"line":249,"column":42}}},"9":{"name":"(anonymous_9)","line":253,"loc":{"start":{"line":253,"column":32},"end":{"line":253,"column":47}}},"10":{"name":"(anonymous_10)","line":257,"loc":{"start":{"line":257,"column":30},"end":{"line":257,"column":45}}},"11":{"name":"(anonymous_11)","line":269,"loc":{"start":{"line":269,"column":34},"end":{"line":269,"column":50}}},"12":{"name":"(anonymous_12)","line":279,"loc":{"start":{"line":279,"column":32},"end":{"line":279,"column":57}}},"13":{"name":"(anonymous_13)","line":285,"loc":{"start":{"line":285,"column":33},"end":{"line":285,"column":44}}},"14":{"name":"(anonymous_14)","line":308,"loc":{"start":{"line":308,"column":38},"end":{"line":308,"column":70}}},"15":{"name":"(anonymous_15)","line":319,"loc":{"start":{"line":319,"column":41},"end":{"line":319,"column":73}}},"16":{"name":"(anonymous_16)","line":328,"loc":{"start":{"line":328,"column":38},"end":{"line":328,"column":63}}},"17":{"name":"(anonymous_17)","line":349,"loc":{"start":{"line":349,"column":39},"end":{"line":349,"column":51}}},"18":{"name":"(anonymous_18)","line":386,"loc":{"start":{"line":386,"column":32},"end":{"line":386,"column":55}}},"19":{"name":"(anonymous_19)","line":390,"loc":{"start":{"line":390,"column":12},"end":{"line":390,"column":37}}},"20":{"name":"(anonymous_20)","line":391,"loc":{"start":{"line":391,"column":43},"end":{"line":391,"column":64}}},"21":{"name":"(anonymous_21)","line":428,"loc":{"start":{"line":428,"column":31},"end":{"line":428,"column":42}}},"22":{"name":"(anonymous_22)","line":436,"loc":{"start":{"line":436,"column":19},"end":{"line":436,"column":35}}},"23":{"name":"(anonymous_23)","line":449,"loc":{"start":{"line":449,"column":12},"end":{"line":449,"column":37}}},"24":{"name":"(anonymous_24)","line":453,"loc":{"start":{"line":453,"column":12},"end":{"line":453,"column":37}}},"25":{"name":"(anonymous_25)","line":454,"loc":{"start":{"line":454,"column":41},"end":{"line":454,"column":58}}},"26":{"name":"(anonymous_26)","line":467,"loc":{"start":{"line":467,"column":35},"end":{"line":467,"column":59}}},"27":{"name":"(anonymous_27)","line":473,"loc":{"start":{"line":473,"column":70},"end":{"line":473,"column":91}}},"28":{"name":"(anonymous_28)","line":484,"loc":{"start":{"line":484,"column":24},"end":{"line":484,"column":40}}},"29":{"name":"(anonymous_29)","line":491,"loc":{"start":{"line":491,"column":103},"end":{"line":491,"column":126}}},"30":{"name":"(anonymous_30)","line":492,"loc":{"start":{"line":492,"column":43},"end":{"line":492,"column":59}}},"31":{"name":"(anonymous_31)","line":508,"loc":{"start":{"line":508,"column":56},"end":{"line":508,"column":73}}},"32":{"name":"(anonymous_32)","line":527,"loc":{"start":{"line":527,"column":24},"end":{"line":527,"column":40}}},"33":{"name":"(anonymous_33)","line":537,"loc":{"start":{"line":537,"column":36},"end":{"line":537,"column":49}}},"34":{"name":"(anonymous_34)","line":542,"loc":{"start":{"line":542,"column":50},"end":{"line":542,"column":61}}},"35":{"name":"(anonymous_35)","line":544,"loc":{"start":{"line":544,"column":74},"end":{"line":544,"column":93}}},"36":{"name":"(anonymous_36)","line":552,"loc":{"start":{"line":552,"column":47},"end":{"line":552,"column":63}}},"37":{"name":"(anonymous_37)","line":562,"loc":{"start":{"line":562,"column":44},"end":{"line":562,"column":64}}},"38":{"name":"(anonymous_38)","line":564,"loc":{"start":{"line":564,"column":55},"end":{"line":564,"column":66}}},"39":{"name":"(anonymous_39)","line":565,"loc":{"start":{"line":565,"column":86},"end":{"line":565,"column":106}}},"40":{"name":"(anonymous_40)","line":594,"loc":{"start":{"line":594,"column":50},"end":{"line":594,"column":61}}},"41":{"name":"(anonymous_41)","line":596,"loc":{"start":{"line":596,"column":77},"end":{"line":596,"column":99}}},"42":{"name":"(anonymous_42)","line":604,"loc":{"start":{"line":604,"column":47},"end":{"line":604,"column":63}}},"43":{"name":"(anonymous_43)","line":613,"loc":{"start":{"line":613,"column":65},"end":{"line":613,"column":87}}},"44":{"name":"(anonymous_44)","line":615,"loc":{"start":{"line":615,"column":55},"end":{"line":615,"column":66}}},"45":{"name":"(anonymous_45)","line":632,"loc":{"start":{"line":632,"column":52},"end":{"line":632,"column":70}}},"46":{"name":"(anonymous_46)","line":648,"loc":{"start":{"line":648,"column":22},"end":{"line":648,"column":36}}},"47":{"name":"(anonymous_47)","line":664,"loc":{"start":{"line":664,"column":22},"end":{"line":664,"column":38}}},"48":{"name":"(anonymous_48)","line":685,"loc":{"start":{"line":685,"column":34},"end":{"line":685,"column":45}}},"49":{"name":"(anonymous_49)","line":688,"loc":{"start":{"line":688,"column":4},"end":{"line":688,"column":29}}},"50":{"name":"(anonymous_50)","line":697,"loc":{"start":{"line":697,"column":95},"end":{"line":697,"column":117}}},"51":{"name":"(anonymous_51)","line":698,"loc":{"start":{"line":698,"column":114},"end":{"line":698,"column":137}}},"52":{"name":"(anonymous_52)","line":721,"loc":{"start":{"line":721,"column":32},"end":{"line":721,"column":43}}},"53":{"name":"(anonymous_53)","line":732,"loc":{"start":{"line":732,"column":8},"end":{"line":732,"column":33}}},"54":{"name":"(anonymous_54)","line":738,"loc":{"start":{"line":738,"column":8},"end":{"line":738,"column":33}}},"55":{"name":"(anonymous_55)","line":755,"loc":{"start":{"line":755,"column":24},"end":{"line":755,"column":35}}},"56":{"name":"(anonymous_56)","line":758,"loc":{"start":{"line":758,"column":87},"end":{"line":758,"column":108}}},"57":{"name":"(anonymous_57)","line":767,"loc":{"start":{"line":767,"column":22},"end":{"line":767,"column":39}}},"58":{"name":"(anonymous_58)","line":779,"loc":{"start":{"line":779,"column":30},"end":{"line":779,"column":50}}},"59":{"name":"(anonymous_59)","line":782,"loc":{"start":{"line":782,"column":57},"end":{"line":782,"column":75}}},"60":{"name":"(anonymous_60)","line":785,"loc":{"start":{"line":785,"column":56},"end":{"line":785,"column":73}}},"61":{"name":"(anonymous_61)","line":800,"loc":{"start":{"line":800,"column":53},"end":{"line":800,"column":66}}},"62":{"name":"(anonymous_62)","line":821,"loc":{"start":{"line":821,"column":81},"end":{"line":821,"column":104}}},"63":{"name":"(anonymous_63)","line":827,"loc":{"start":{"line":827,"column":38},"end":{"line":827,"column":58}}},"64":{"name":"(anonymous_64)","line":829,"loc":{"start":{"line":829,"column":60},"end":{"line":829,"column":76}}},"65":{"name":"(anonymous_65)","line":832,"loc":{"start":{"line":832,"column":61},"end":{"line":832,"column":78}}},"66":{"name":"(anonymous_66)","line":847,"loc":{"start":{"line":847,"column":53},"end":{"line":847,"column":66}}},"67":{"name":"(anonymous_67)","line":851,"loc":{"start":{"line":851,"column":51},"end":{"line":851,"column":67}}},"68":{"name":"(anonymous_68)","line":876,"loc":{"start":{"line":876,"column":22},"end":{"line":876,"column":36}}},"69":{"name":"(anonymous_69)","line":885,"loc":{"start":{"line":885,"column":22},"end":{"line":885,"column":36}}},"70":{"name":"(anonymous_70)","line":890,"loc":{"start":{"line":890,"column":38},"end":{"line":890,"column":58}}},"71":{"name":"(anonymous_71)","line":892,"loc":{"start":{"line":892,"column":54},"end":{"line":892,"column":78}}},"72":{"name":"(anonymous_72)","line":900,"loc":{"start":{"line":900,"column":35},"end":{"line":900,"column":61}}},"73":{"name":"(anonymous_73)","line":907,"loc":{"start":{"line":907,"column":24},"end":{"line":907,"column":47}}},"74":{"name":"(anonymous_74)","line":908,"loc":{"start":{"line":908,"column":39},"end":{"line":908,"column":50}}},"75":{"name":"(anonymous_75)","line":914,"loc":{"start":{"line":914,"column":42},"end":{"line":914,"column":62}}},"76":{"name":"(anonymous_76)","line":940,"loc":{"start":{"line":940,"column":28},"end":{"line":940,"column":50}}},"77":{"name":"(anonymous_77)","line":947,"loc":{"start":{"line":947,"column":47},"end":{"line":947,"column":58}}},"78":{"name":"(anonymous_78)","line":953,"loc":{"start":{"line":953,"column":50},"end":{"line":953,"column":70}}},"79":{"name":"(anonymous_79)","line":972,"loc":{"start":{"line":972,"column":50},"end":{"line":972,"column":67}}},"80":{"name":"(anonymous_80)","line":973,"loc":{"start":{"line":973,"column":55},"end":{"line":973,"column":72}}},"81":{"name":"(anonymous_81)","line":978,"loc":{"start":{"line":978,"column":22},"end":{"line":978,"column":38}}},"82":{"name":"(anonymous_82)","line":1003,"loc":{"start":{"line":1003,"column":32},"end":{"line":1003,"column":43}}},"83":{"name":"(anonymous_83)","line":1015,"loc":{"start":{"line":1015,"column":8},"end":{"line":1015,"column":33}}},"84":{"name":"(anonymous_84)","line":1019,"loc":{"start":{"line":1019,"column":8},"end":{"line":1019,"column":33}}},"85":{"name":"(anonymous_85)","line":1029,"loc":{"start":{"line":1029,"column":26},"end":{"line":1029,"column":48}}},"86":{"name":"(anonymous_86)","line":1033,"loc":{"start":{"line":1033,"column":47},"end":{"line":1033,"column":63}}},"87":{"name":"(anonymous_87)","line":1040,"loc":{"start":{"line":1040,"column":61},"end":{"line":1040,"column":72}}},"88":{"name":"(anonymous_88)","line":1079,"loc":{"start":{"line":1079,"column":35},"end":{"line":1079,"column":46}}},"89":{"name":"(anonymous_89)","line":1084,"loc":{"start":{"line":1084,"column":12},"end":{"line":1084,"column":37}}},"90":{"name":"(anonymous_90)","line":1086,"loc":{"start":{"line":1086,"column":22},"end":{"line":1086,"column":44}}},"91":{"name":"(anonymous_91)","line":1088,"loc":{"start":{"line":1088,"column":66},"end":{"line":1088,"column":86}}},"92":{"name":"(anonymous_92)","line":1116,"loc":{"start":{"line":1116,"column":39},"end":{"line":1116,"column":50}}},"93":{"name":"(anonymous_93)","line":1123,"loc":{"start":{"line":1123,"column":12},"end":{"line":1123,"column":37}}},"94":{"name":"(anonymous_94)","line":1127,"loc":{"start":{"line":1127,"column":12},"end":{"line":1127,"column":37}}},"95":{"name":"(anonymous_95)","line":1136,"loc":{"start":{"line":1136,"column":26},"end":{"line":1136,"column":48}}},"96":{"name":"(anonymous_96)","line":1141,"loc":{"start":{"line":1141,"column":34},"end":{"line":1141,"column":54}}},"97":{"name":"(anonymous_97)","line":1143,"loc":{"start":{"line":1143,"column":62},"end":{"line":1143,"column":78}}},"98":{"name":"(anonymous_98)","line":1146,"loc":{"start":{"line":1146,"column":63},"end":{"line":1146,"column":80}}},"99":{"name":"(anonymous_99)","line":1152,"loc":{"start":{"line":1152,"column":38},"end":{"line":1152,"column":60}}},"100":{"name":"(anonymous_100)","line":1154,"loc":{"start":{"line":1154,"column":57},"end":{"line":1154,"column":74}}},"101":{"name":"(anonymous_101)","line":1172,"loc":{"start":{"line":1172,"column":15},"end":{"line":1172,"column":33}}},"102":{"name":"(anonymous_102)","line":1176,"loc":{"start":{"line":1176,"column":19},"end":{"line":1176,"column":30}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":23,"column":32}},"2":{"start":{"line":26,"column":0},"end":{"line":191,"column":2}},"3":{"start":{"line":39,"column":16},"end":{"line":44,"column":17}},"4":{"start":{"line":40,"column":20},"end":{"line":40,"column":27}},"5":{"start":{"line":42,"column":20},"end":{"line":42,"column":114}},"6":{"start":{"line":43,"column":20},"end":{"line":43,"column":101}},"7":{"start":{"line":74,"column":28},"end":{"line":74,"column":69}},"8":{"start":{"line":75,"column":28},"end":{"line":75,"column":53}},"9":{"start":{"line":76,"column":28},"end":{"line":76,"column":73}},"10":{"start":{"line":80,"column":24},"end":{"line":87,"column":25}},"11":{"start":{"line":81,"column":28},"end":{"line":83,"column":29}},"12":{"start":{"line":82,"column":32},"end":{"line":82,"column":88}},"13":{"start":{"line":84,"column":28},"end":{"line":84,"column":69}},"14":{"start":{"line":85,"column":28},"end":{"line":85,"column":59}},"15":{"start":{"line":86,"column":28},"end":{"line":86,"column":67}},"16":{"start":{"line":88,"column":24},"end":{"line":88,"column":31}},"17":{"start":{"line":91,"column":24},"end":{"line":98,"column":25}},"18":{"start":{"line":92,"column":28},"end":{"line":94,"column":29}},"19":{"start":{"line":93,"column":32},"end":{"line":93,"column":88}},"20":{"start":{"line":95,"column":28},"end":{"line":95,"column":69}},"21":{"start":{"line":96,"column":28},"end":{"line":96,"column":59}},"22":{"start":{"line":97,"column":28},"end":{"line":97,"column":67}},"23":{"start":{"line":99,"column":24},"end":{"line":99,"column":31}},"24":{"start":{"line":117,"column":24},"end":{"line":122,"column":25}},"25":{"start":{"line":118,"column":28},"end":{"line":118,"column":69}},"26":{"start":{"line":119,"column":28},"end":{"line":119,"column":55}},"27":{"start":{"line":120,"column":28},"end":{"line":120,"column":60}},"28":{"start":{"line":121,"column":28},"end":{"line":121,"column":62}},"29":{"start":{"line":123,"column":24},"end":{"line":129,"column":25}},"30":{"start":{"line":124,"column":28},"end":{"line":124,"column":69}},"31":{"start":{"line":125,"column":28},"end":{"line":125,"column":54}},"32":{"start":{"line":126,"column":28},"end":{"line":126,"column":55}},"33":{"start":{"line":127,"column":28},"end":{"line":127,"column":60}},"34":{"start":{"line":128,"column":28},"end":{"line":128,"column":65}},"35":{"start":{"line":130,"column":24},"end":{"line":130,"column":31}},"36":{"start":{"line":193,"column":0},"end":{"line":212,"column":1}},"37":{"start":{"line":194,"column":4},"end":{"line":195,"column":20}},"38":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"39":{"start":{"line":197,"column":4},"end":{"line":197,"column":41}},"40":{"start":{"line":199,"column":4},"end":{"line":200,"column":20}},"41":{"start":{"line":200,"column":8},"end":{"line":200,"column":20}},"42":{"start":{"line":202,"column":4},"end":{"line":203,"column":27}},"43":{"start":{"line":205,"column":4},"end":{"line":206,"column":20}},"44":{"start":{"line":206,"column":8},"end":{"line":206,"column":20}},"45":{"start":{"line":208,"column":4},"end":{"line":208,"column":37}},"46":{"start":{"line":209,"column":4},"end":{"line":209,"column":34}},"47":{"start":{"line":211,"column":4},"end":{"line":211,"column":32}},"48":{"start":{"line":214,"column":0},"end":{"line":245,"column":1}},"49":{"start":{"line":215,"column":4},"end":{"line":215,"column":56}},"50":{"start":{"line":218,"column":4},"end":{"line":218,"column":41}},"51":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"52":{"start":{"line":221,"column":8},"end":{"line":221,"column":73}},"53":{"start":{"line":224,"column":4},"end":{"line":228,"column":5}},"54":{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},"55":{"start":{"line":226,"column":12},"end":{"line":226,"column":71}},"56":{"start":{"line":226,"column":40},"end":{"line":226,"column":71}},"57":{"start":{"line":230,"column":4},"end":{"line":244,"column":5}},"58":{"start":{"line":231,"column":8},"end":{"line":231,"column":37}},"59":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"60":{"start":{"line":233,"column":12},"end":{"line":233,"column":67}},"61":{"start":{"line":237,"column":8},"end":{"line":243,"column":11}},"62":{"start":{"line":247,"column":0},"end":{"line":247,"column":45}},"63":{"start":{"line":249,"column":0},"end":{"line":251,"column":2}},"64":{"start":{"line":250,"column":4},"end":{"line":250,"column":20}},"65":{"start":{"line":253,"column":0},"end":{"line":255,"column":1}},"66":{"start":{"line":254,"column":4},"end":{"line":254,"column":32}},"67":{"start":{"line":257,"column":0},"end":{"line":283,"column":2}},"68":{"start":{"line":258,"column":4},"end":{"line":258,"column":19}},"69":{"start":{"line":259,"column":4},"end":{"line":278,"column":5}},"70":{"start":{"line":260,"column":8},"end":{"line":260,"column":24}},"71":{"start":{"line":261,"column":8},"end":{"line":277,"column":9}},"72":{"start":{"line":262,"column":12},"end":{"line":262,"column":40}},"73":{"start":{"line":264,"column":12},"end":{"line":264,"column":18}},"74":{"start":{"line":265,"column":12},"end":{"line":267,"column":13}},"75":{"start":{"line":266,"column":16},"end":{"line":266,"column":32}},"76":{"start":{"line":268,"column":12},"end":{"line":276,"column":13}},"77":{"start":{"line":269,"column":16},"end":{"line":273,"column":19}},"78":{"start":{"line":270,"column":20},"end":{"line":272,"column":21}},"79":{"start":{"line":271,"column":24},"end":{"line":271,"column":66}},"80":{"start":{"line":274,"column":19},"end":{"line":276,"column":13}},"81":{"start":{"line":275,"column":16},"end":{"line":275,"column":62}},"82":{"start":{"line":279,"column":4},"end":{"line":282,"column":7}},"83":{"start":{"line":280,"column":8},"end":{"line":280,"column":33}},"84":{"start":{"line":281,"column":8},"end":{"line":281,"column":15}},"85":{"start":{"line":285,"column":0},"end":{"line":287,"column":1}},"86":{"start":{"line":286,"column":4},"end":{"line":286,"column":20}},"87":{"start":{"line":308,"column":0},"end":{"line":317,"column":2}},"88":{"start":{"line":309,"column":4},"end":{"line":316,"column":5}},"89":{"start":{"line":310,"column":8},"end":{"line":310,"column":43}},"90":{"start":{"line":311,"column":8},"end":{"line":311,"column":37}},"91":{"start":{"line":312,"column":8},"end":{"line":312,"column":48}},"92":{"start":{"line":313,"column":8},"end":{"line":313,"column":48}},"93":{"start":{"line":315,"column":8},"end":{"line":315,"column":39}},"94":{"start":{"line":319,"column":0},"end":{"line":326,"column":1}},"95":{"start":{"line":320,"column":4},"end":{"line":325,"column":5}},"96":{"start":{"line":321,"column":8},"end":{"line":321,"column":60}},"97":{"start":{"line":322,"column":8},"end":{"line":322,"column":15}},"98":{"start":{"line":324,"column":8},"end":{"line":324,"column":59}},"99":{"start":{"line":328,"column":0},"end":{"line":371,"column":2}},"100":{"start":{"line":329,"column":4},"end":{"line":329,"column":20}},"101":{"start":{"line":330,"column":4},"end":{"line":330,"column":38}},"102":{"start":{"line":331,"column":4},"end":{"line":336,"column":5}},"103":{"start":{"line":332,"column":8},"end":{"line":332,"column":29}},"104":{"start":{"line":333,"column":8},"end":{"line":335,"column":9}},"105":{"start":{"line":334,"column":12},"end":{"line":334,"column":26}},"106":{"start":{"line":338,"column":4},"end":{"line":369,"column":5}},"107":{"start":{"line":339,"column":8},"end":{"line":339,"column":26}},"108":{"start":{"line":340,"column":8},"end":{"line":368,"column":9}},"109":{"start":{"line":341,"column":12},"end":{"line":341,"column":30}},"110":{"start":{"line":342,"column":12},"end":{"line":361,"column":13}},"111":{"start":{"line":343,"column":16},"end":{"line":343,"column":32}},"112":{"start":{"line":344,"column":19},"end":{"line":361,"column":13}},"113":{"start":{"line":345,"column":16},"end":{"line":358,"column":17}},"114":{"start":{"line":346,"column":20},"end":{"line":348,"column":21}},"115":{"start":{"line":347,"column":24},"end":{"line":347,"column":50}},"116":{"start":{"line":349,"column":20},"end":{"line":357,"column":23}},"117":{"start":{"line":350,"column":24},"end":{"line":356,"column":25}},"118":{"start":{"line":351,"column":28},"end":{"line":355,"column":29}},"119":{"start":{"line":352,"column":32},"end":{"line":352,"column":58}},"120":{"start":{"line":354,"column":32},"end":{"line":354,"column":55}},"121":{"start":{"line":359,"column":19},"end":{"line":361,"column":13}},"122":{"start":{"line":360,"column":16},"end":{"line":360,"column":40}},"123":{"start":{"line":363,"column":12},"end":{"line":367,"column":13}},"124":{"start":{"line":364,"column":16},"end":{"line":364,"column":110}},"125":{"start":{"line":370,"column":4},"end":{"line":370,"column":18}},"126":{"start":{"line":386,"column":0},"end":{"line":416,"column":2}},"127":{"start":{"line":387,"column":4},"end":{"line":387,"column":20}},"128":{"start":{"line":389,"column":4},"end":{"line":415,"column":7}},"129":{"start":{"line":391,"column":16},"end":{"line":414,"column":19}},"130":{"start":{"line":392,"column":20},"end":{"line":394,"column":21}},"131":{"start":{"line":393,"column":24},"end":{"line":393,"column":64}},"132":{"start":{"line":395,"column":20},"end":{"line":413,"column":21}},"133":{"start":{"line":396,"column":24},"end":{"line":400,"column":25}},"134":{"start":{"line":397,"column":28},"end":{"line":397,"column":55}},"135":{"start":{"line":399,"column":28},"end":{"line":399,"column":52}},"136":{"start":{"line":401,"column":24},"end":{"line":409,"column":25}},"137":{"start":{"line":402,"column":28},"end":{"line":406,"column":29}},"138":{"start":{"line":403,"column":32},"end":{"line":403,"column":61}},"139":{"start":{"line":405,"column":32},"end":{"line":405,"column":59}},"140":{"start":{"line":408,"column":28},"end":{"line":408,"column":51}},"141":{"start":{"line":410,"column":24},"end":{"line":410,"column":38}},"142":{"start":{"line":412,"column":24},"end":{"line":412,"column":43}},"143":{"start":{"line":428,"column":0},"end":{"line":673,"column":2}},"144":{"start":{"line":429,"column":4},"end":{"line":429,"column":20}},"145":{"start":{"line":430,"column":4},"end":{"line":448,"column":6}},"146":{"start":{"line":437,"column":16},"end":{"line":437,"column":69}},"147":{"start":{"line":449,"column":4},"end":{"line":672,"column":14}},"148":{"start":{"line":450,"column":16},"end":{"line":450,"column":58}},"149":{"start":{"line":454,"column":16},"end":{"line":670,"column":19}},"150":{"start":{"line":457,"column":20},"end":{"line":457,"column":45}},"151":{"start":{"line":458,"column":20},"end":{"line":472,"column":21}},"152":{"start":{"line":463,"column":24},"end":{"line":463,"column":30}},"153":{"start":{"line":466,"column":24},"end":{"line":466,"column":65}},"154":{"start":{"line":467,"column":24},"end":{"line":471,"column":27}},"155":{"start":{"line":468,"column":28},"end":{"line":470,"column":29}},"156":{"start":{"line":469,"column":32},"end":{"line":469,"column":171}},"157":{"start":{"line":473,"column":20},"end":{"line":481,"column":23}},"158":{"start":{"line":474,"column":24},"end":{"line":480,"column":25}},"159":{"start":{"line":475,"column":28},"end":{"line":475,"column":164}},"160":{"start":{"line":477,"column":28},"end":{"line":477,"column":61}},"161":{"start":{"line":478,"column":28},"end":{"line":478,"column":69}},"162":{"start":{"line":479,"column":28},"end":{"line":479,"column":53}},"163":{"start":{"line":483,"column":20},"end":{"line":483,"column":44}},"164":{"start":{"line":487,"column":20},"end":{"line":487,"column":45}},"165":{"start":{"line":488,"column":20},"end":{"line":488,"column":57}},"166":{"start":{"line":489,"column":20},"end":{"line":489,"column":44}},"167":{"start":{"line":490,"column":20},"end":{"line":490,"column":38}},"168":{"start":{"line":491,"column":20},"end":{"line":524,"column":23}},"169":{"start":{"line":492,"column":28},"end":{"line":506,"column":31}},"170":{"start":{"line":493,"column":32},"end":{"line":493,"column":57}},"171":{"start":{"line":494,"column":32},"end":{"line":496,"column":33}},"172":{"start":{"line":495,"column":36},"end":{"line":495,"column":158}},"173":{"start":{"line":497,"column":32},"end":{"line":504,"column":33}},"174":{"start":{"line":498,"column":36},"end":{"line":498,"column":120}},"175":{"start":{"line":499,"column":36},"end":{"line":499,"column":59}},"176":{"start":{"line":501,"column":36},"end":{"line":501,"column":87}},"177":{"start":{"line":502,"column":36},"end":{"line":502,"column":122}},"178":{"start":{"line":503,"column":36},"end":{"line":503,"column":63}},"179":{"start":{"line":505,"column":32},"end":{"line":505,"column":64}},"180":{"start":{"line":508,"column":28},"end":{"line":523,"column":31}},"181":{"start":{"line":509,"column":32},"end":{"line":509,"column":53}},"182":{"start":{"line":510,"column":32},"end":{"line":515,"column":33}},"183":{"start":{"line":511,"column":36},"end":{"line":514,"column":37}},"184":{"start":{"line":512,"column":40},"end":{"line":512,"column":56}},"185":{"start":{"line":513,"column":40},"end":{"line":513,"column":46}},"186":{"start":{"line":516,"column":32},"end":{"line":522,"column":33}},"187":{"start":{"line":517,"column":36},"end":{"line":517,"column":78}},"188":{"start":{"line":518,"column":36},"end":{"line":518,"column":87}},"189":{"start":{"line":519,"column":36},"end":{"line":519,"column":147}},"190":{"start":{"line":521,"column":36},"end":{"line":521,"column":61}},"191":{"start":{"line":526,"column":20},"end":{"line":526,"column":44}},"192":{"start":{"line":529,"column":20},"end":{"line":646,"column":21}},"193":{"start":{"line":530,"column":24},"end":{"line":530,"column":58}},"194":{"start":{"line":532,"column":24},"end":{"line":532,"column":49}},"195":{"start":{"line":533,"column":24},"end":{"line":533,"column":42}},"196":{"start":{"line":535,"column":24},"end":{"line":535,"column":66}},"197":{"start":{"line":537,"column":24},"end":{"line":630,"column":27}},"198":{"start":{"line":538,"column":28},"end":{"line":538,"column":48}},"199":{"start":{"line":539,"column":28},"end":{"line":539,"column":55}},"200":{"start":{"line":540,"column":28},"end":{"line":629,"column":29}},"201":{"start":{"line":542,"column":32},"end":{"line":551,"column":34}},"202":{"start":{"line":543,"column":36},"end":{"line":543,"column":137}},"203":{"start":{"line":544,"column":36},"end":{"line":550,"column":39}},"204":{"start":{"line":545,"column":40},"end":{"line":549,"column":41}},"205":{"start":{"line":546,"column":44},"end":{"line":546,"column":60}},"206":{"start":{"line":548,"column":44},"end":{"line":548,"column":58}},"207":{"start":{"line":552,"column":32},"end":{"line":577,"column":34}},"208":{"start":{"line":553,"column":36},"end":{"line":575,"column":39}},"209":{"start":{"line":563,"column":40},"end":{"line":574,"column":41}},"210":{"start":{"line":564,"column":44},"end":{"line":570,"column":59}},"211":{"start":{"line":565,"column":48},"end":{"line":569,"column":51}},"212":{"start":{"line":566,"column":52},"end":{"line":568,"column":53}},"213":{"start":{"line":567,"column":56},"end":{"line":567,"column":71}},"214":{"start":{"line":571,"column":44},"end":{"line":571,"column":71}},"215":{"start":{"line":573,"column":44},"end":{"line":573,"column":85}},"216":{"start":{"line":578,"column":32},"end":{"line":578,"column":46}},"217":{"start":{"line":579,"column":32},"end":{"line":579,"column":38}},"218":{"start":{"line":581,"column":32},"end":{"line":581,"column":78}},"219":{"start":{"line":583,"column":32},"end":{"line":590,"column":36}},"220":{"start":{"line":592,"column":32},"end":{"line":592,"column":38}},"221":{"start":{"line":594,"column":32},"end":{"line":603,"column":34}},"222":{"start":{"line":595,"column":36},"end":{"line":595,"column":137}},"223":{"start":{"line":596,"column":36},"end":{"line":602,"column":39}},"224":{"start":{"line":597,"column":40},"end":{"line":601,"column":41}},"225":{"start":{"line":598,"column":44},"end":{"line":598,"column":60}},"226":{"start":{"line":600,"column":44},"end":{"line":600,"column":58}},"227":{"start":{"line":604,"column":32},"end":{"line":626,"column":34}},"228":{"start":{"line":605,"column":36},"end":{"line":612,"column":38}},"229":{"start":{"line":613,"column":36},"end":{"line":625,"column":39}},"230":{"start":{"line":614,"column":40},"end":{"line":624,"column":41}},"231":{"start":{"line":615,"column":44},"end":{"line":617,"column":58}},"232":{"start":{"line":616,"column":48},"end":{"line":616,"column":65}},"233":{"start":{"line":619,"column":44},"end":{"line":623,"column":47}},"234":{"start":{"line":627,"column":32},"end":{"line":627,"column":46}},"235":{"start":{"line":628,"column":32},"end":{"line":628,"column":38}},"236":{"start":{"line":632,"column":24},"end":{"line":643,"column":27}},"237":{"start":{"line":633,"column":28},"end":{"line":633,"column":42}},"238":{"start":{"line":634,"column":28},"end":{"line":636,"column":29}},"239":{"start":{"line":635,"column":32},"end":{"line":635,"column":74}},"240":{"start":{"line":637,"column":28},"end":{"line":641,"column":29}},"241":{"start":{"line":638,"column":32},"end":{"line":638,"column":133}},"242":{"start":{"line":639,"column":32},"end":{"line":639,"column":108}},"243":{"start":{"line":640,"column":32},"end":{"line":640,"column":101}},"244":{"start":{"line":642,"column":28},"end":{"line":642,"column":121}},"245":{"start":{"line":645,"column":24},"end":{"line":645,"column":48}},"246":{"start":{"line":649,"column":20},"end":{"line":649,"column":44}},"247":{"start":{"line":650,"column":20},"end":{"line":650,"column":40}},"248":{"start":{"line":651,"column":20},"end":{"line":651,"column":67}},"249":{"start":{"line":652,"column":20},"end":{"line":654,"column":21}},"250":{"start":{"line":653,"column":24},"end":{"line":653,"column":50}},"251":{"start":{"line":655,"column":20},"end":{"line":662,"column":21}},"252":{"start":{"line":656,"column":24},"end":{"line":660,"column":25}},"253":{"start":{"line":657,"column":28},"end":{"line":657,"column":67}},"254":{"start":{"line":659,"column":28},"end":{"line":659,"column":45}},"255":{"start":{"line":661,"column":24},"end":{"line":661,"column":54}},"256":{"start":{"line":665,"column":20},"end":{"line":669,"column":21}},"257":{"start":{"line":666,"column":24},"end":{"line":666,"column":81}},"258":{"start":{"line":668,"column":24},"end":{"line":668,"column":48}},"259":{"start":{"line":685,"column":0},"end":{"line":708,"column":2}},"260":{"start":{"line":686,"column":4},"end":{"line":686,"column":20}},"261":{"start":{"line":687,"column":4},"end":{"line":707,"column":7}},"262":{"start":{"line":689,"column":8},"end":{"line":689,"column":41}},"263":{"start":{"line":690,"column":8},"end":{"line":690,"column":49}},"264":{"start":{"line":692,"column":8},"end":{"line":706,"column":9}},"265":{"start":{"line":693,"column":12},"end":{"line":693,"column":28}},"266":{"start":{"line":694,"column":12},"end":{"line":696,"column":13}},"267":{"start":{"line":695,"column":16},"end":{"line":695,"column":31}},"268":{"start":{"line":697,"column":12},"end":{"line":701,"column":15}},"269":{"start":{"line":698,"column":16},"end":{"line":700,"column":19}},"270":{"start":{"line":699,"column":20},"end":{"line":699,"column":45}},"271":{"start":{"line":703,"column":12},"end":{"line":703,"column":53}},"272":{"start":{"line":704,"column":12},"end":{"line":704,"column":57}},"273":{"start":{"line":705,"column":12},"end":{"line":705,"column":98}},"274":{"start":{"line":721,"column":0},"end":{"line":987,"column":2}},"275":{"start":{"line":722,"column":4},"end":{"line":722,"column":20}},"276":{"start":{"line":723,"column":4},"end":{"line":729,"column":6}},"277":{"start":{"line":731,"column":4},"end":{"line":986,"column":7}},"278":{"start":{"line":733,"column":12},"end":{"line":733,"column":53}},"279":{"start":{"line":739,"column":12},"end":{"line":739,"column":42}},"280":{"start":{"line":741,"column":12},"end":{"line":741,"column":48}},"281":{"start":{"line":742,"column":12},"end":{"line":742,"column":55}},"282":{"start":{"line":744,"column":12},"end":{"line":750,"column":13}},"283":{"start":{"line":745,"column":16},"end":{"line":745,"column":83}},"284":{"start":{"line":746,"column":16},"end":{"line":749,"column":17}},"285":{"start":{"line":747,"column":20},"end":{"line":747,"column":50}},"286":{"start":{"line":748,"column":20},"end":{"line":748,"column":53}},"287":{"start":{"line":751,"column":12},"end":{"line":985,"column":13}},"288":{"start":{"line":752,"column":16},"end":{"line":752,"column":109}},"289":{"start":{"line":755,"column":16},"end":{"line":984,"column":19}},"290":{"start":{"line":757,"column":20},"end":{"line":757,"column":45}},"291":{"start":{"line":758,"column":20},"end":{"line":764,"column":23}},"292":{"start":{"line":759,"column":24},"end":{"line":763,"column":25}},"293":{"start":{"line":760,"column":28},"end":{"line":760,"column":135}},"294":{"start":{"line":762,"column":28},"end":{"line":762,"column":53}},"295":{"start":{"line":765,"column":20},"end":{"line":765,"column":44}},"296":{"start":{"line":769,"column":20},"end":{"line":769,"column":45}},"297":{"start":{"line":771,"column":20},"end":{"line":873,"column":21}},"298":{"start":{"line":775,"column":24},"end":{"line":797,"column":27}},"299":{"start":{"line":780,"column":28},"end":{"line":796,"column":29}},"300":{"start":{"line":781,"column":32},"end":{"line":793,"column":33}},"301":{"start":{"line":782,"column":36},"end":{"line":784,"column":39}},"302":{"start":{"line":783,"column":40},"end":{"line":783,"column":58}},"303":{"start":{"line":785,"column":36},"end":{"line":787,"column":39}},"304":{"start":{"line":786,"column":40},"end":{"line":786,"column":57}},"305":{"start":{"line":788,"column":36},"end":{"line":788,"column":51}},"306":{"start":{"line":789,"column":36},"end":{"line":789,"column":134}},"307":{"start":{"line":792,"column":36},"end":{"line":792,"column":134}},"308":{"start":{"line":795,"column":32},"end":{"line":795,"column":128}},"309":{"start":{"line":800,"column":24},"end":{"line":813,"column":27}},"310":{"start":{"line":803,"column":28},"end":{"line":805,"column":29}},"311":{"start":{"line":804,"column":32},"end":{"line":804,"column":127}},"312":{"start":{"line":808,"column":28},"end":{"line":810,"column":29}},"313":{"start":{"line":809,"column":32},"end":{"line":809,"column":118}},"314":{"start":{"line":812,"column":28},"end":{"line":812,"column":39}},"315":{"start":{"line":815,"column":24},"end":{"line":815,"column":30}},"316":{"start":{"line":821,"column":24},"end":{"line":846,"column":27}},"317":{"start":{"line":822,"column":28},"end":{"line":845,"column":29}},"318":{"start":{"line":823,"column":32},"end":{"line":842,"column":35}},"319":{"start":{"line":828,"column":36},"end":{"line":841,"column":37}},"320":{"start":{"line":829,"column":40},"end":{"line":831,"column":43}},"321":{"start":{"line":830,"column":44},"end":{"line":830,"column":61}},"322":{"start":{"line":832,"column":40},"end":{"line":834,"column":43}},"323":{"start":{"line":833,"column":44},"end":{"line":833,"column":62}},"324":{"start":{"line":835,"column":40},"end":{"line":835,"column":55}},"325":{"start":{"line":836,"column":40},"end":{"line":836,"column":133}},"326":{"start":{"line":838,"column":40},"end":{"line":838,"column":64}},"327":{"start":{"line":839,"column":40},"end":{"line":839,"column":55}},"328":{"start":{"line":840,"column":40},"end":{"line":840,"column":119}},"329":{"start":{"line":844,"column":32},"end":{"line":844,"column":125}},"330":{"start":{"line":847,"column":24},"end":{"line":863,"column":27}},"331":{"start":{"line":848,"column":28},"end":{"line":860,"column":29}},"332":{"start":{"line":849,"column":32},"end":{"line":849,"column":69}},"333":{"start":{"line":850,"column":32},"end":{"line":857,"column":33}},"334":{"start":{"line":851,"column":36},"end":{"line":855,"column":39}},"335":{"start":{"line":852,"column":40},"end":{"line":854,"column":41}},"336":{"start":{"line":853,"column":44},"end":{"line":853,"column":172}},"337":{"start":{"line":856,"column":36},"end":{"line":856,"column":55}},"338":{"start":{"line":859,"column":32},"end":{"line":859,"column":59}},"339":{"start":{"line":862,"column":28},"end":{"line":862,"column":39}},"340":{"start":{"line":864,"column":24},"end":{"line":864,"column":30}},"341":{"start":{"line":866,"column":24},"end":{"line":870,"column":25}},"342":{"start":{"line":867,"column":28},"end":{"line":867,"column":134}},"343":{"start":{"line":869,"column":28},"end":{"line":869,"column":97}},"344":{"start":{"line":871,"column":24},"end":{"line":871,"column":48}},"345":{"start":{"line":872,"column":24},"end":{"line":872,"column":30}},"346":{"start":{"line":878,"column":20},"end":{"line":880,"column":21}},"347":{"start":{"line":879,"column":24},"end":{"line":879,"column":119}},"348":{"start":{"line":882,"column":20},"end":{"line":882,"column":31}},"349":{"start":{"line":890,"column":20},"end":{"line":899,"column":22}},"350":{"start":{"line":891,"column":24},"end":{"line":891,"column":100}},"351":{"start":{"line":892,"column":24},"end":{"line":898,"column":27}},"352":{"start":{"line":893,"column":28},"end":{"line":897,"column":29}},"353":{"start":{"line":894,"column":32},"end":{"line":894,"column":42}},"354":{"start":{"line":896,"column":32},"end":{"line":896,"column":55}},"355":{"start":{"line":900,"column":20},"end":{"line":971,"column":22}},"356":{"start":{"line":901,"column":24},"end":{"line":970,"column":27}},"357":{"start":{"line":908,"column":28},"end":{"line":920,"column":44}},"358":{"start":{"line":909,"column":32},"end":{"line":909,"column":50}},"359":{"start":{"line":910,"column":32},"end":{"line":919,"column":33}},"360":{"start":{"line":911,"column":36},"end":{"line":918,"column":39}},"361":{"start":{"line":915,"column":40},"end":{"line":917,"column":41}},"362":{"start":{"line":916,"column":44},"end":{"line":916,"column":59}},"363":{"start":{"line":922,"column":28},"end":{"line":922,"column":74}},"364":{"start":{"line":923,"column":28},"end":{"line":929,"column":30}},"365":{"start":{"line":930,"column":28},"end":{"line":969,"column":31}},"366":{"start":{"line":941,"column":32},"end":{"line":968,"column":33}},"367":{"start":{"line":942,"column":36},"end":{"line":945,"column":37}},"368":{"start":{"line":943,"column":40},"end":{"line":943,"column":66}},"369":{"start":{"line":944,"column":40},"end":{"line":944,"column":57}},"370":{"start":{"line":947,"column":36},"end":{"line":959,"column":50}},"371":{"start":{"line":948,"column":40},"end":{"line":948,"column":57}},"372":{"start":{"line":949,"column":40},"end":{"line":958,"column":41}},"373":{"start":{"line":950,"column":44},"end":{"line":957,"column":47}},"374":{"start":{"line":954,"column":48},"end":{"line":956,"column":49}},"375":{"start":{"line":955,"column":52},"end":{"line":955,"column":67}},"376":{"start":{"line":961,"column":36},"end":{"line":967,"column":39}},"377":{"start":{"line":972,"column":20},"end":{"line":976,"column":23}},"378":{"start":{"line":973,"column":24},"end":{"line":975,"column":27}},"379":{"start":{"line":974,"column":28},"end":{"line":974,"column":54}},"380":{"start":{"line":979,"column":20},"end":{"line":983,"column":21}},"381":{"start":{"line":980,"column":24},"end":{"line":980,"column":91}},"382":{"start":{"line":982,"column":24},"end":{"line":982,"column":48}},"383":{"start":{"line":1003,"column":0},"end":{"line":1068,"column":2}},"384":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":58}},"385":{"start":{"line":1006,"column":4},"end":{"line":1008,"column":5}},"386":{"start":{"line":1007,"column":8},"end":{"line":1007,"column":26}},"387":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":20}},"388":{"start":{"line":1010,"column":4},"end":{"line":1012,"column":6}},"389":{"start":{"line":1014,"column":4},"end":{"line":1067,"column":6}},"390":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":54}},"391":{"start":{"line":1020,"column":12},"end":{"line":1020,"column":42}},"392":{"start":{"line":1021,"column":12},"end":{"line":1065,"column":13}},"393":{"start":{"line":1022,"column":16},"end":{"line":1022,"column":23}},"394":{"start":{"line":1024,"column":16},"end":{"line":1026,"column":17}},"395":{"start":{"line":1025,"column":20},"end":{"line":1025,"column":172}},"396":{"start":{"line":1027,"column":16},"end":{"line":1064,"column":17}},"397":{"start":{"line":1028,"column":20},"end":{"line":1061,"column":23}},"398":{"start":{"line":1030,"column":24},"end":{"line":1060,"column":25}},"399":{"start":{"line":1031,"column":32},"end":{"line":1031,"column":48}},"400":{"start":{"line":1033,"column":32},"end":{"line":1047,"column":35}},"401":{"start":{"line":1034,"column":36},"end":{"line":1046,"column":37}},"402":{"start":{"line":1035,"column":40},"end":{"line":1037,"column":41}},"403":{"start":{"line":1036,"column":44},"end":{"line":1036,"column":63}},"404":{"start":{"line":1038,"column":43},"end":{"line":1046,"column":37}},"405":{"start":{"line":1039,"column":40},"end":{"line":1039,"column":56}},"406":{"start":{"line":1040,"column":40},"end":{"line":1044,"column":43}},"407":{"start":{"line":1041,"column":44},"end":{"line":1043,"column":45}},"408":{"start":{"line":1042,"column":48},"end":{"line":1042,"column":59}},"409":{"start":{"line":1045,"column":40},"end":{"line":1045,"column":104}},"410":{"start":{"line":1048,"column":32},"end":{"line":1057,"column":33}},"411":{"start":{"line":1049,"column":36},"end":{"line":1049,"column":60}},"412":{"start":{"line":1050,"column":36},"end":{"line":1050,"column":154}},"413":{"start":{"line":1051,"column":39},"end":{"line":1057,"column":33}},"414":{"start":{"line":1052,"column":36},"end":{"line":1052,"column":129}},"415":{"start":{"line":1054,"column":36},"end":{"line":1054,"column":62}},"416":{"start":{"line":1055,"column":36},"end":{"line":1055,"column":68}},"417":{"start":{"line":1056,"column":36},"end":{"line":1056,"column":43}},"418":{"start":{"line":1059,"column":28},"end":{"line":1059,"column":109}},"419":{"start":{"line":1063,"column":20},"end":{"line":1063,"column":97}},"420":{"start":{"line":1079,"column":0},"end":{"line":1104,"column":2}},"421":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":20}},"422":{"start":{"line":1081,"column":4},"end":{"line":1103,"column":7}},"423":{"start":{"line":1085,"column":16},"end":{"line":1102,"column":19}},"424":{"start":{"line":1087,"column":20},"end":{"line":1101,"column":21}},"425":{"start":{"line":1088,"column":24},"end":{"line":1098,"column":27}},"426":{"start":{"line":1089,"column":28},"end":{"line":1097,"column":29}},"427":{"start":{"line":1090,"column":32},"end":{"line":1090,"column":77}},"428":{"start":{"line":1091,"column":32},"end":{"line":1091,"column":47}},"429":{"start":{"line":1092,"column":32},"end":{"line":1092,"column":53}},"430":{"start":{"line":1093,"column":32},"end":{"line":1093,"column":59}},"431":{"start":{"line":1094,"column":32},"end":{"line":1094,"column":47}},"432":{"start":{"line":1096,"column":32},"end":{"line":1096,"column":62}},"433":{"start":{"line":1100,"column":24},"end":{"line":1100,"column":105}},"434":{"start":{"line":1116,"column":0},"end":{"line":1170,"column":2}},"435":{"start":{"line":1117,"column":4},"end":{"line":1120,"column":10}},"436":{"start":{"line":1122,"column":4},"end":{"line":1169,"column":14}},"437":{"start":{"line":1124,"column":16},"end":{"line":1124,"column":58}},"438":{"start":{"line":1128,"column":16},"end":{"line":1128,"column":46}},"439":{"start":{"line":1130,"column":16},"end":{"line":1132,"column":17}},"440":{"start":{"line":1131,"column":20},"end":{"line":1131,"column":172}},"441":{"start":{"line":1133,"column":16},"end":{"line":1167,"column":17}},"442":{"start":{"line":1135,"column":20},"end":{"line":1164,"column":23}},"443":{"start":{"line":1137,"column":24},"end":{"line":1163,"column":25}},"444":{"start":{"line":1138,"column":28},"end":{"line":1160,"column":31}},"445":{"start":{"line":1142,"column":32},"end":{"line":1150,"column":33}},"446":{"start":{"line":1143,"column":36},"end":{"line":1145,"column":39}},"447":{"start":{"line":1144,"column":40},"end":{"line":1144,"column":57}},"448":{"start":{"line":1146,"column":36},"end":{"line":1148,"column":39}},"449":{"start":{"line":1147,"column":40},"end":{"line":1147,"column":58}},"450":{"start":{"line":1149,"column":36},"end":{"line":1149,"column":51}},"451":{"start":{"line":1151,"column":32},"end":{"line":1159,"column":35}},"452":{"start":{"line":1153,"column":36},"end":{"line":1157,"column":37}},"453":{"start":{"line":1154,"column":40},"end":{"line":1156,"column":43}},"454":{"start":{"line":1155,"column":44},"end":{"line":1155,"column":61}},"455":{"start":{"line":1158,"column":36},"end":{"line":1158,"column":50}},"456":{"start":{"line":1162,"column":28},"end":{"line":1162,"column":109}},"457":{"start":{"line":1166,"column":20},"end":{"line":1166,"column":97}},"458":{"start":{"line":1172,"column":0},"end":{"line":1174,"column":2}},"459":{"start":{"line":1173,"column":4},"end":{"line":1173,"column":38}},"460":{"start":{"line":1176,"column":0},"end":{"line":1178,"column":1}},"461":{"start":{"line":1177,"column":4},"end":{"line":1177,"column":20}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":16}},{"start":{"line":39,"column":16},"end":{"line":39,"column":16}}]},"2":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":45},"end":{"line":42,"column":97}},{"start":{"line":42,"column":98},"end":{"line":42,"column":113}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":24},"end":{"line":80,"column":24}},{"start":{"line":80,"column":24},"end":{"line":80,"column":24}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":28},"end":{"line":81,"column":28}},{"start":{"line":81,"column":28},"end":{"line":81,"column":28}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":24},"end":{"line":91,"column":24}},{"start":{"line":91,"column":24},"end":{"line":91,"column":24}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":28},"end":{"line":92,"column":28}},{"start":{"line":92,"column":28},"end":{"line":92,"column":28}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":24},"end":{"line":117,"column":24}},{"start":{"line":117,"column":24},"end":{"line":117,"column":24}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":24},"end":{"line":123,"column":24}},{"start":{"line":123,"column":24},"end":{"line":123,"column":24}}]},"9":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"10":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"11":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":7},"end":{"line":199,"column":24}},{"start":{"line":199,"column":28},"end":{"line":199,"column":47}}]},"12":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"13":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"14":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":12}},{"start":{"line":226,"column":12},"end":{"line":226,"column":12}}]},"15":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"16":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]},"17":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":8}},{"start":{"line":261,"column":8},"end":{"line":261,"column":8}}]},"18":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":12}},{"start":{"line":265,"column":12},"end":{"line":265,"column":12}}]},"19":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":15},"end":{"line":265,"column":36}},{"start":{"line":265,"column":40},"end":{"line":265,"column":51}}]},"20":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":12},"end":{"line":268,"column":12}},{"start":{"line":268,"column":12},"end":{"line":268,"column":12}}]},"21":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":28},"end":{"line":268,"column":29}},{"start":{"line":268,"column":31},"end":{"line":268,"column":35}}]},"22":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":17},"end":{"line":269,"column":18}},{"start":{"line":269,"column":20},"end":{"line":269,"column":24}}]},"23":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":20},"end":{"line":270,"column":20}},{"start":{"line":270,"column":20},"end":{"line":270,"column":20}}]},"24":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":19},"end":{"line":274,"column":19}},{"start":{"line":274,"column":19},"end":{"line":274,"column":19}}]},"25":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":42},"end":{"line":274,"column":43}},{"start":{"line":274,"column":45},"end":{"line":274,"column":49}}]},"26":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":22},"end":{"line":275,"column":23}},{"start":{"line":275,"column":25},"end":{"line":275,"column":29}}]},"27":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":53},"end":{"line":275,"column":54}},{"start":{"line":275,"column":56},"end":{"line":275,"column":60}}]},"28":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"29":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":8},"end":{"line":333,"column":8}},{"start":{"line":333,"column":8},"end":{"line":333,"column":8}}]},"30":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":8},"end":{"line":340,"column":8}},{"start":{"line":340,"column":8},"end":{"line":340,"column":8}}]},"31":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":12},"end":{"line":342,"column":12}},{"start":{"line":342,"column":12},"end":{"line":342,"column":12}}]},"32":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":19},"end":{"line":344,"column":19}},{"start":{"line":344,"column":19},"end":{"line":344,"column":19}}]},"33":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":20},"end":{"line":346,"column":20}},{"start":{"line":346,"column":20},"end":{"line":346,"column":20}}]},"34":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":24},"end":{"line":350,"column":24}},{"start":{"line":350,"column":24},"end":{"line":350,"column":24}}]},"35":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":28},"end":{"line":351,"column":28}},{"start":{"line":351,"column":28},"end":{"line":351,"column":28}}]},"36":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":19},"end":{"line":359,"column":19}},{"start":{"line":359,"column":19},"end":{"line":359,"column":19}}]},"37":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":12},"end":{"line":363,"column":12}},{"start":{"line":363,"column":12},"end":{"line":363,"column":12}}]},"38":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":20},"end":{"line":392,"column":20}},{"start":{"line":392,"column":20},"end":{"line":392,"column":20}}]},"39":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":23},"end":{"line":392,"column":29}},{"start":{"line":392,"column":33},"end":{"line":392,"column":38}}]},"40":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":20},"end":{"line":395,"column":20}},{"start":{"line":395,"column":20},"end":{"line":395,"column":20}}]},"41":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":24},"end":{"line":396,"column":24}},{"start":{"line":396,"column":24},"end":{"line":396,"column":24}}]},"42":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":24},"end":{"line":401,"column":24}},{"start":{"line":401,"column":24},"end":{"line":401,"column":24}}]},"43":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":28},"end":{"line":402,"column":28}},{"start":{"line":402,"column":28},"end":{"line":402,"column":28}}]},"44":{"line":458,"type":"switch","locations":[{"start":{"line":459,"column":20},"end":{"line":459,"column":32}},{"start":{"line":460,"column":20},"end":{"line":460,"column":32}},{"start":{"line":461,"column":20},"end":{"line":461,"column":33}},{"start":{"line":462,"column":20},"end":{"line":463,"column":30}},{"start":{"line":464,"column":20},"end":{"line":471,"column":27}}]},"45":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":28},"end":{"line":468,"column":28}},{"start":{"line":468,"column":28},"end":{"line":468,"column":28}}]},"46":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":24},"end":{"line":474,"column":24}},{"start":{"line":474,"column":24},"end":{"line":474,"column":24}}]},"47":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":27},"end":{"line":474,"column":30}},{"start":{"line":474,"column":34},"end":{"line":474,"column":40}},{"start":{"line":474,"column":44},"end":{"line":474,"column":56}}]},"48":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":32},"end":{"line":494,"column":32}},{"start":{"line":494,"column":32},"end":{"line":494,"column":32}}]},"49":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":32},"end":{"line":497,"column":32}},{"start":{"line":497,"column":32},"end":{"line":497,"column":32}}]},"50":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":36},"end":{"line":511,"column":36}},{"start":{"line":511,"column":36},"end":{"line":511,"column":36}}]},"51":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":32},"end":{"line":516,"column":32}},{"start":{"line":516,"column":32},"end":{"line":516,"column":32}}]},"52":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":20},"end":{"line":529,"column":20}},{"start":{"line":529,"column":20},"end":{"line":529,"column":20}}]},"53":{"line":540,"type":"switch","locations":[{"start":{"line":541,"column":28},"end":{"line":579,"column":38}},{"start":{"line":580,"column":28},"end":{"line":592,"column":38}},{"start":{"line":593,"column":28},"end":{"line":628,"column":38}}]},"54":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":40},"end":{"line":545,"column":40}},{"start":{"line":545,"column":40},"end":{"line":545,"column":40}}]},"55":{"line":557,"type":"binary-expr","locations":[{"start":{"line":557,"column":45},"end":{"line":557,"column":60}},{"start":{"line":557,"column":62},"end":{"line":557,"column":78}}]},"56":{"line":563,"type":"if","locations":[{"start":{"line":563,"column":40},"end":{"line":563,"column":40}},{"start":{"line":563,"column":40},"end":{"line":563,"column":40}}]},"57":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":43},"end":{"line":563,"column":47}},{"start":{"line":563,"column":51},"end":{"line":563,"column":55}}]},"58":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":52},"end":{"line":566,"column":52}},{"start":{"line":566,"column":52},"end":{"line":566,"column":52}}]},"59":{"line":566,"type":"binary-expr","locations":[{"start":{"line":566,"column":55},"end":{"line":566,"column":59}},{"start":{"line":566,"column":63},"end":{"line":566,"column":87}}]},"60":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":55},"end":{"line":573,"column":58}},{"start":{"line":573,"column":60},"end":{"line":573,"column":83}}]},"61":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":45},"end":{"line":585,"column":60}},{"start":{"line":585,"column":62},"end":{"line":585,"column":78}}]},"62":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":40},"end":{"line":597,"column":40}},{"start":{"line":597,"column":40},"end":{"line":597,"column":40}}]},"63":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":40},"end":{"line":614,"column":40}},{"start":{"line":614,"column":40},"end":{"line":614,"column":40}}]},"64":{"line":614,"type":"binary-expr","locations":[{"start":{"line":614,"column":43},"end":{"line":614,"column":47}},{"start":{"line":614,"column":51},"end":{"line":614,"column":57}}]},"65":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":52},"end":{"line":635,"column":68}},{"start":{"line":635,"column":70},"end":{"line":635,"column":72}}]},"66":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":28},"end":{"line":637,"column":28}},{"start":{"line":637,"column":28},"end":{"line":637,"column":28}}]},"67":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":31},"end":{"line":637,"column":48}},{"start":{"line":637,"column":52},"end":{"line":637,"column":65}}]},"68":{"line":642,"type":"cond-expr","locations":[{"start":{"line":642,"column":99},"end":{"line":642,"column":102}},{"start":{"line":642,"column":103},"end":{"line":642,"column":106}}]},"69":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":20},"end":{"line":652,"column":20}},{"start":{"line":652,"column":20},"end":{"line":652,"column":20}}]},"70":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":20},"end":{"line":655,"column":20}},{"start":{"line":655,"column":20},"end":{"line":655,"column":20}}]},"71":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":24},"end":{"line":656,"column":24}},{"start":{"line":656,"column":24},"end":{"line":656,"column":24}}]},"72":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":20},"end":{"line":665,"column":20}},{"start":{"line":665,"column":20},"end":{"line":665,"column":20}}]},"73":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":8},"end":{"line":692,"column":8}},{"start":{"line":692,"column":8},"end":{"line":692,"column":8}}]},"74":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":12},"end":{"line":744,"column":12}},{"start":{"line":744,"column":12},"end":{"line":744,"column":12}}]},"75":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":15},"end":{"line":744,"column":26}},{"start":{"line":744,"column":30},"end":{"line":744,"column":44}}]},"76":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":16},"end":{"line":746,"column":16}},{"start":{"line":746,"column":16},"end":{"line":746,"column":16}}]},"77":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":12},"end":{"line":751,"column":12}},{"start":{"line":751,"column":12},"end":{"line":751,"column":12}}]},"78":{"line":751,"type":"binary-expr","locations":[{"start":{"line":751,"column":15},"end":{"line":751,"column":26}},{"start":{"line":751,"column":30},"end":{"line":751,"column":44}}]},"79":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":24},"end":{"line":759,"column":24}},{"start":{"line":759,"column":24},"end":{"line":759,"column":24}}]},"80":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":27},"end":{"line":759,"column":30}},{"start":{"line":759,"column":34},"end":{"line":759,"column":41}}]},"81":{"line":771,"type":"switch","locations":[{"start":{"line":773,"column":20},"end":{"line":815,"column":30}},{"start":{"line":818,"column":20},"end":{"line":864,"column":30}},{"start":{"line":865,"column":20},"end":{"line":872,"column":30}}]},"82":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":28},"end":{"line":780,"column":28}},{"start":{"line":780,"column":28},"end":{"line":780,"column":28}}]},"83":{"line":780,"type":"binary-expr","locations":[{"start":{"line":780,"column":31},"end":{"line":780,"column":35}},{"start":{"line":780,"column":39},"end":{"line":780,"column":43}}]},"84":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":32},"end":{"line":781,"column":32}},{"start":{"line":781,"column":32},"end":{"line":781,"column":32}}]},"85":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":28},"end":{"line":803,"column":28}},{"start":{"line":803,"column":28},"end":{"line":803,"column":28}}]},"86":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":28},"end":{"line":808,"column":28}},{"start":{"line":808,"column":28},"end":{"line":808,"column":28}}]},"87":{"line":808,"type":"binary-expr","locations":[{"start":{"line":808,"column":32},"end":{"line":808,"column":52}},{"start":{"line":808,"column":56},"end":{"line":808,"column":75}},{"start":{"line":808,"column":80},"end":{"line":808,"column":123}}]},"88":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":28},"end":{"line":822,"column":28}},{"start":{"line":822,"column":28},"end":{"line":822,"column":28}}]},"89":{"line":822,"type":"binary-expr","locations":[{"start":{"line":822,"column":31},"end":{"line":822,"column":35}},{"start":{"line":822,"column":39},"end":{"line":822,"column":46}}]},"90":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":36},"end":{"line":828,"column":36}},{"start":{"line":828,"column":36},"end":{"line":828,"column":36}}]},"91":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":28},"end":{"line":848,"column":28}},{"start":{"line":848,"column":28},"end":{"line":848,"column":28}}]},"92":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":32},"end":{"line":850,"column":32}},{"start":{"line":850,"column":32},"end":{"line":850,"column":32}}]},"93":{"line":852,"type":"if","locations":[{"start":{"line":852,"column":40},"end":{"line":852,"column":40}},{"start":{"line":852,"column":40},"end":{"line":852,"column":40}}]},"94":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":24},"end":{"line":866,"column":24}},{"start":{"line":866,"column":24},"end":{"line":866,"column":24}}]},"95":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":20},"end":{"line":878,"column":20}},{"start":{"line":878,"column":20},"end":{"line":878,"column":20}}]},"96":{"line":878,"type":"binary-expr","locations":[{"start":{"line":878,"column":23},"end":{"line":878,"column":64}},{"start":{"line":878,"column":68},"end":{"line":878,"column":101}}]},"97":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":28},"end":{"line":893,"column":28}},{"start":{"line":893,"column":28},"end":{"line":893,"column":28}}]},"98":{"line":905,"type":"cond-expr","locations":[{"start":{"line":905,"column":44},"end":{"line":905,"column":56}},{"start":{"line":905,"column":57},"end":{"line":905,"column":61}}]},"99":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":32},"end":{"line":910,"column":32}},{"start":{"line":910,"column":32},"end":{"line":910,"column":32}}]},"100":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":40},"end":{"line":915,"column":40}},{"start":{"line":915,"column":40},"end":{"line":915,"column":40}}]},"101":{"line":915,"type":"binary-expr","locations":[{"start":{"line":915,"column":43},"end":{"line":915,"column":47}},{"start":{"line":915,"column":51},"end":{"line":915,"column":70}},{"start":{"line":915,"column":74},"end":{"line":915,"column":94}}]},"102":{"line":925,"type":"binary-expr","locations":[{"start":{"line":925,"column":41},"end":{"line":925,"column":49}},{"start":{"line":925,"column":51},"end":{"line":925,"column":60}},{"start":{"line":925,"column":62},"end":{"line":925,"column":66}}]},"103":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":42},"end":{"line":934,"column":51}},{"start":{"line":934,"column":53},"end":{"line":934,"column":57}}]},"104":{"line":938,"type":"cond-expr","locations":[{"start":{"line":938,"column":52},"end":{"line":938,"column":64}},{"start":{"line":938,"column":65},"end":{"line":938,"column":69}}]},"105":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":32},"end":{"line":941,"column":32}},{"start":{"line":941,"column":32},"end":{"line":941,"column":32}}]},"106":{"line":941,"type":"binary-expr","locations":[{"start":{"line":941,"column":35},"end":{"line":941,"column":39}},{"start":{"line":941,"column":43},"end":{"line":941,"column":49}}]},"107":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":36},"end":{"line":942,"column":36}},{"start":{"line":942,"column":36},"end":{"line":942,"column":36}}]},"108":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":40},"end":{"line":949,"column":40}},{"start":{"line":949,"column":40},"end":{"line":949,"column":40}}]},"109":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":48},"end":{"line":954,"column":48}},{"start":{"line":954,"column":48},"end":{"line":954,"column":48}}]},"110":{"line":954,"type":"binary-expr","locations":[{"start":{"line":954,"column":51},"end":{"line":954,"column":55}},{"start":{"line":954,"column":59},"end":{"line":954,"column":78}},{"start":{"line":954,"column":82},"end":{"line":954,"column":102}}]},"111":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":20},"end":{"line":979,"column":20}},{"start":{"line":979,"column":20},"end":{"line":979,"column":20}}]},"112":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":4},"end":{"line":1006,"column":4}},{"start":{"line":1006,"column":4},"end":{"line":1006,"column":4}}]},"113":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":12},"end":{"line":1021,"column":12}},{"start":{"line":1021,"column":12},"end":{"line":1021,"column":12}}]},"114":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":16},"end":{"line":1024,"column":16}},{"start":{"line":1024,"column":16},"end":{"line":1024,"column":16}}]},"115":{"line":1025,"type":"cond-expr","locations":[{"start":{"line":1025,"column":106},"end":{"line":1025,"column":163}},{"start":{"line":1025,"column":166},"end":{"line":1025,"column":171}}]},"116":{"line":1025,"type":"binary-expr","locations":[{"start":{"line":1025,"column":43},"end":{"line":1025,"column":71}},{"start":{"line":1025,"column":75},"end":{"line":1025,"column":77}}]},"117":{"line":1027,"type":"if","locations":[{"start":{"line":1027,"column":16},"end":{"line":1027,"column":16}},{"start":{"line":1027,"column":16},"end":{"line":1027,"column":16}}]},"118":{"line":1030,"type":"if","locations":[{"start":{"line":1030,"column":24},"end":{"line":1030,"column":24}},{"start":{"line":1030,"column":24},"end":{"line":1030,"column":24}}]},"119":{"line":1030,"type":"binary-expr","locations":[{"start":{"line":1030,"column":27},"end":{"line":1030,"column":31}},{"start":{"line":1030,"column":35},"end":{"line":1030,"column":41}}]},"120":{"line":1034,"type":"if","locations":[{"start":{"line":1034,"column":36},"end":{"line":1034,"column":36}},{"start":{"line":1034,"column":36},"end":{"line":1034,"column":36}}]},"121":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":40},"end":{"line":1035,"column":40}},{"start":{"line":1035,"column":40},"end":{"line":1035,"column":40}}]},"122":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":43},"end":{"line":1038,"column":43}},{"start":{"line":1038,"column":43},"end":{"line":1038,"column":43}}]},"123":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":44},"end":{"line":1041,"column":44}},{"start":{"line":1041,"column":44},"end":{"line":1041,"column":44}}]},"124":{"line":1045,"type":"binary-expr","locations":[{"start":{"line":1045,"column":40},"end":{"line":1045,"column":44}},{"start":{"line":1045,"column":48},"end":{"line":1045,"column":103}}]},"125":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":32},"end":{"line":1048,"column":32}},{"start":{"line":1048,"column":32},"end":{"line":1048,"column":32}}]},"126":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":39},"end":{"line":1051,"column":39}},{"start":{"line":1051,"column":39},"end":{"line":1051,"column":39}}]},"127":{"line":1054,"type":"binary-expr","locations":[{"start":{"line":1054,"column":48},"end":{"line":1054,"column":57}},{"start":{"line":1054,"column":59},"end":{"line":1054,"column":61}}]},"128":{"line":1087,"type":"if","locations":[{"start":{"line":1087,"column":20},"end":{"line":1087,"column":20}},{"start":{"line":1087,"column":20},"end":{"line":1087,"column":20}}]},"129":{"line":1087,"type":"binary-expr","locations":[{"start":{"line":1087,"column":23},"end":{"line":1087,"column":27}},{"start":{"line":1087,"column":31},"end":{"line":1087,"column":37}}]},"130":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":28},"end":{"line":1089,"column":28}},{"start":{"line":1089,"column":28},"end":{"line":1089,"column":28}}]},"131":{"line":1090,"type":"binary-expr","locations":[{"start":{"line":1090,"column":43},"end":{"line":1090,"column":58}},{"start":{"line":1090,"column":60},"end":{"line":1090,"column":76}}]},"132":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":16},"end":{"line":1130,"column":16}},{"start":{"line":1130,"column":16},"end":{"line":1130,"column":16}}]},"133":{"line":1131,"type":"cond-expr","locations":[{"start":{"line":1131,"column":106},"end":{"line":1131,"column":163}},{"start":{"line":1131,"column":166},"end":{"line":1131,"column":171}}]},"134":{"line":1131,"type":"binary-expr","locations":[{"start":{"line":1131,"column":43},"end":{"line":1131,"column":71}},{"start":{"line":1131,"column":75},"end":{"line":1131,"column":77}}]},"135":{"line":1133,"type":"if","locations":[{"start":{"line":1133,"column":16},"end":{"line":1133,"column":16}},{"start":{"line":1133,"column":16},"end":{"line":1133,"column":16}}]},"136":{"line":1137,"type":"if","locations":[{"start":{"line":1137,"column":24},"end":{"line":1137,"column":24}},{"start":{"line":1137,"column":24},"end":{"line":1137,"column":24}}]},"137":{"line":1137,"type":"binary-expr","locations":[{"start":{"line":1137,"column":27},"end":{"line":1137,"column":31}},{"start":{"line":1137,"column":35},"end":{"line":1137,"column":41}}]},"138":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":32},"end":{"line":1142,"column":32}},{"start":{"line":1142,"column":32},"end":{"line":1142,"column":32}}]},"139":{"line":1142,"type":"binary-expr","locations":[{"start":{"line":1142,"column":35},"end":{"line":1142,"column":39}},{"start":{"line":1142,"column":43},"end":{"line":1142,"column":47}}]},"140":{"line":1153,"type":"if","locations":[{"start":{"line":1153,"column":36},"end":{"line":1153,"column":36}},{"start":{"line":1153,"column":36},"end":{"line":1153,"column":36}}]},"141":{"line":1153,"type":"binary-expr","locations":[{"start":{"line":1153,"column":39},"end":{"line":1153,"column":43}},{"start":{"line":1153,"column":47},"end":{"line":1153,"column":55}}]}},"code":["/**"," * index.js"," * OpenIDConnect provider"," * Based on OAuth 2.0 provider by Amir Malik"," *"," * @author Agustín Moyano"," */","","var EventEmitter = require('events').EventEmitter,","querystring = require('querystring'),","//serializer = require('serializer'),","//hashlib = require('hashlib2'),","modelling = require('modelling'),","sailsRedis = require('sails-redis'),","crypto = require('crypto'),","_ = require('lodash'),","extend = require('extend'),","url = require('url'),","Q = require('q'),","jwt = require('jwt-simple'),","util = require(\"util\"),","base64url = require('base64url'),","cleanObj = require('clean-obj');","","","var defaults = {","        login_url: '/login',","        consent_url: '/consent',","        scopes: {","            openid: 'Informs the Authorization Server that the Client is making an OpenID Connect request.',","            profile:'Access to the End-User\\'s default profile Claims.',","            email: 'Access to the email and email_verified Claims.',","            address: 'Access to the address Claim.',","            phone: 'Access to the phone_number and phone_number_verified Claims.',","            offline_access: 'Grants access to the End-User\\'s UserInfo Endpoint even when the End-User is not present (not logged in).'","        },","        policies:{","            loggedIn: function(req, res, next) {","                if(req.session.user) {","                    next();","                } else {","                    var q = req.parsedParams?req.path+'?'+querystring.stringify(req.parsedParams):req.originalUrl;","                    res.redirect(this.settings.login_url+'?'+querystring.stringify({return_url: q}));","                }","            },","        },","        adapters: {","            redis: sailsRedis","        },","        connections: {","            def: {","                adapter: 'redis'","            }","        },","        models: {","                user: {","                    identity: 'user',","                    connection: 'def',","                    schema: true,","                    policies: 'loggedIn',","                    attributes: {","                        name: {type: 'string', required: true, unique: true},","                        given_name: {type: 'string', required: true},","                        middle_name: 'string',","                        family_name: {type: 'string', required: true},","                        profile: 'string',","                        email: {type: 'string', email: true, required: true, unique: true},","                        password: 'string',","                        picture: 'binary',","                        birthdate: 'date',","                        gender: 'string',","                        phone_number: 'string',","                        samePassword: function(clearText) {","                            var sha256 = crypto.createHash('sha256');","                            sha256.update(clearText);","                            return this.password == sha256.digest('hex');","                        }","                    },","                    beforeCreate: function(values, next) {","                        if(values.password) {","                            if(values.password != values.passConfirm) {","                                return next(\"Password and confirmation does not match\");","                            }","                            var sha256 = crypto.createHash('sha256');","                            sha256.update(values.password);","                            values.password = sha256.digest('hex');","                        }","                        next();","                    },","                    beforeUpdate: function(values, next) {","                        if(values.password) {","                            if(values.password != values.passConfirm) {","                                return next(\"Password and confirmation does not match\");","                            }","                            var sha256 = crypto.createHash('sha256');","                            sha256.update(values.password);","                            values.password = sha256.digest('hex');","                        }","                        next();","                    }","                },","                client: {","                    identity: 'client',","                    connection: 'def',","                    schema: true,","                    policies: 'loggedIn',","                    attributes: {","                        key: {type: 'string', required: true, unique: true},","                        secret: {type: 'string', required: true, unique: true},","                        name: {type: 'string', required: true},","                        image: 'binary',","                        user: {model: 'user'},","                        redirect_uris: {type:'array', required: true},","                        credentialsFlow: {type: 'boolean', defaultsTo: false}","                    },","                    beforeCreate: function(values, next) {","                        if(!values.key) {","                            var sha256 = crypto.createHash('sha256');","                            sha256.update(values.name);","                            sha256.update(Math.random()+'');","                            values.key = sha256.digest('hex');","                        }","                        if(!values.secret) {","                            var sha256 = crypto.createHash('sha256');","                            sha256.update(values.key);","                            sha256.update(values.name);","                            sha256.update(Math.random()+'');","                            values.secret = sha256.digest('hex');","                        }","                        next();","                    }","                },","                consent: {","                    identity: 'consent',","                    connection: 'def',","                    policies: 'loggedIn',","                    attributes: {","                        user: {model: 'user', required: true},","                        client: {model: 'client', required: true},","                        scopes: 'array'","                    }","                },","                auth: {","                    identity: 'auth',","                    connection: 'def',","                    policies: 'loggedIn',","                    attributes: {","                        client: {model: 'client',   required: true},","                        scope: {type: 'array', required: true},","                        user: {model: 'user', required: true},","                        sub: {type: 'string', required: true},","                        code: {type: 'string', required: true},","                        redirectUri: {type: 'url', required: true},","                        responseType: {type: 'string', required: true},","                        status: {type: 'string', required: true},","                        accessTokens: {","                            collection: 'access',","                            via: 'auth'","                        },","                        refreshTokens: {","                            collection: 'refresh',","                            via: 'auth'","                        }","                    }","                },","                access: {","                    identity: 'access',","                    connection: 'def',","                    attributes: {","                        token: {type: 'string', required: true},","                        type: {type: 'string', required: true},","                        idToken: 'string',","                        expiresIn: 'integer',","                        scope: {type: 'array', required: true},","                        client: {model: 'client', required: true},","                        user: {model: 'user', required: true},","                        auth: {model: 'auth'}","                    }","                },","                refresh: {","                    identity: 'refresh',","                    connection: 'def',","                    attributes: {","                        token: {type: 'string', required: true},","                        scope: {type: 'array', required: true},","                        auth: {model: 'auth', required: true},","                        status: {type: 'string', required: true}","                    }","                }","        }","};","","function parse_authorization(authorization) {","    if(!authorization)","        return null;","","    var parts = authorization.split(' ');","","    if(parts.length != 2 || parts[0] != 'Basic')","        return null;","","    var creds = new Buffer(parts[1], 'base64').toString(),","    i = creds.indexOf(':');","","    if(i == -1)","        return null;","","    var username = creds.slice(0, i);","    password = creds.slice(i + 1);","","    return [username, password];","}","","function OpenIDConnect(options) {","    this.settings = extend(true, {}, defaults, options);","","    //allow removing attributes, by marking thme as null","    cleanObj(this.settings.models, true);","","    for(var i in this.settings.policies) {","        this.settings.policies[i] = this.settings.policies[i].bind(this);","    }","","    if(this.settings.alien) {","        for(var i in alien) {","            if(this.settings.models[i]) delete this.settings.models[i];","        }","    }","","    if(this.settings.orm) {","        this.orm = this.settings.orm;","        for(var i in this.settings.policies) {","            this.orm.setPolicy(true, i, this.settings.policies[i]);","        }","    } else {","","        this.orm = new modelling({","            models: this.settings.models,","            adapters: this.settings.adapters,","            connections: this.settings.connections,","            app: this.settings.app,","            policies: this.settings.policies","        });","    }","}","","OpenIDConnect.prototype = new EventEmitter();","","OpenIDConnect.prototype.done = function() {","    this.orm.done();","};","","OpenIDConnect.prototype.model = function(name) {","    return this.orm.model(name);","}","","OpenIDConnect.prototype.use = function(name) {","    var alien = {};","    if(this.settings.alien) {","        var self = this;","        if(!name) {","            alien = this.settings.alien;","        } else {","            var m;","            if(_.isPlainObject(name) && name.models) {","                m = name.models;","            }","            if(util.isArray(m||name)) {","                (m||name).forEach(function(model) {","                    if(self.settings.alien[model]) {","                        alien[model] = self.settings.alien[model];","                    }","                });","            } else if(self.settings.alien[m||name]) {","                alien[m||name] = self.settings.alien[m||name];","            }","        }","    }","    return [this.orm.use(name), function(req, res, next) {","        extend(req.model, alien);","        next();","    }];","};","","OpenIDConnect.prototype.getOrm = function() {","    return this.orm;","}","/*OpenIDConnect.prototype.getClientParams = function() {","    return this.orm.client.getParams();","};*/","","/*OpenIDConnect.prototype.searchClient = function(parts, callback) {","    return new this.orm.client.reverse(parts, callback);","};","","OpenIDConnect.prototype.getUserParams = function() {","    return this.orm.user.getParams();","};","","OpenIDConnect.prototype.user = function(params, callback) {","    return new this.orm.user(params, callback);","};","","OpenIDConnect.prototype.searchUser = function(parts, callback) {","    return new this.orm.user.reverse(parts, callback);","};*/","","OpenIDConnect.prototype.errorHandle = function(res, uri, error, desc) {","    if(uri) {","        var redirect = url.parse(uri,true);","        redirect.query.error = error; //'invalid_request';","        redirect.query.error_description = desc; //'Parameter '+x+' is mandatory.';","        res.redirect(400, url.format(redirect));","    } else {","        res.send(400, error+': '+desc);","    }","};","","OpenIDConnect.prototype.endpointParams = function (spec, req, res, next) {","    try {","        req.parsedParams = this.parseParams(req, res, spec);","        next();","    } catch(err) {","        this.errorHandle(res, err.uri, err.error, err.msg);","    }","}","","OpenIDConnect.prototype.parseParams = function(req, res, spec) {","    var params = {};","    var r = req.param('redirect_uri');","    for(var i in spec) {","        var x = req.param(i);","        if(x) {","            params[i] = x;","        }","    }","","    for(var i in spec) {","        var x = params[i];","        if(!x) {","            var error = false;","            if(typeof spec[i] == 'boolean') {","                error = spec[i];","            } else if (_.isPlainObject(spec[i])) {","                for(var j in spec[i]) {","                    if(!util.isArray(spec[i][j])) {","                        spec[i][j] = [spec[i][j]];","                    }","                    spec[i][j].forEach(function(e) {","                        if(!error) {","                            if(util.isRegExp(e)) {","                                error = e.test(params[j]);","                            } else {","                                error = e == params[j];","                            }","                        }","                    });","                }","            } else if (_.isFunction(spec[i])) {","                error = spec[i](params);","            }","","            if(error) {","                throw {type: 'error', uri: r, error: 'invalid_request', msg: 'Parameter '+i+' is mandatory.'};","                //this.errorHandle(res, r, 'invalid_request', 'Parameter '+i+' is mandatory.');","                //return;","            }","        }","    }","    return params;","};","","/**"," * login"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.post('/login', oidc.login(),  afterLogin, loginErrorHandler);"," *"," * This calls verification strategy and creates session."," * Verification strategy must have two parameters: req and callback function with two parameters: error and user"," *"," *"," */","","OpenIDConnect.prototype.login = function(validateUser) {","    var self = this;","","    return [self.use({policies: {loggedIn: false}, models: 'user'}),","            function(req, res, next) {","                validateUser(req, /*next:*/function(error,user) {","                    if(!error && !user) {","                        error = new Error('User not validated');","                    }","                    if(!error) {","                        if(user.id) {","                            req.session.user = user.id;","                        } else {","                            delete req.session.user;","                        }","                        if(user.sub) {","                            if(typeof user.sub ==='function') {","                                req.session.sub = user.sub();","                            } else {","                                req.session.sub = user.sub;","                            }","                        } else {","                            delete req.session.sub;","                        }","                        return next();","                    } else {","                        return next(error);","                    }","                });","    }];","};","","/**"," * auth"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.get('/authorization', oidc.auth());"," *"," * This is the authorization endpoint, as described in http://tools.ietf.org/html/rfc6749#section-3.1"," *"," */","OpenIDConnect.prototype.auth = function() {","    var self = this;","    var spec = {","            response_type: true,","            client_id: true,","            scope: true,","            redirect_uri: true,","            state: false,","            nonce: function(params){","                return params.response_type.indexOf('id_token')!==-1;","            },","            display: false,","            prompt: false,","            max_age: false,","            ui_locales: false,","            claims_locales: false,","            id_token_hint: false,","            login_hint: false,","            acr_values: false,","            response_mode: false","    };","    return [function(req, res, next) {","                self.endpointParams(spec, req, res, next);","            },","            self.use(['client', 'consent', 'auth', 'access']),","            function(req, res, next) {","                Q(req.parsedParams).then(function(params) {","                    //Step 2: Check if response_type is supported and client_id is valid.","","                    var deferred = Q.defer();","                    switch(params.response_type) {","                    case 'none':","                    case 'code':","                    case 'token':","                    case 'id_token':","                        break;","                    default:","                        //var error = false;","                        var sp = params.response_type.split(' ');","                        sp.forEach(function(response_type) {","                            if(['code', 'token', 'id_token'].indexOf(response_type) == -1) {","                                throw {type: 'error', uri: params.redirect_uri, error: 'unsupported_response_type', msg: 'Response type '+response_type+' not supported.'};","                            }","                        });","                    }","                    req.model.client.findOne({key: params.client_id}, function(err, model) {","                        if(err || !model || model === '') {","                            deferred.reject({type: 'error', uri: params.redirect_uri, error: 'invalid_client', msg: 'Client '+params.client_id+' doesn\\'t exist.'});","                        } else {","                            req.session.client_id = model.id;","                            req.session.client_secret = model.secret;","                            deferred.resolve(params);","                        }","                    });","","                    return deferred.promise;","                }).then(function(params){","                    //Step 3: Check if scopes are valid, and if consent was given.","","                    var deferred = Q.defer();","                    var reqsco = params.scope.split(' ');","                    req.session.scopes = {};","                    var promises = [];","                    req.model.consent.findOne({user: req.session.user, client: req.session.client_id}, function(err, consent) {","                            reqsco.forEach(function(scope) {","                                var innerDef = Q.defer();","                                if(!self.settings.scopes[scope]) {","                                    innerDef.reject({type: 'error', uri: params.redirect_uri, error: 'invalid_scope', msg: 'Scope '+scope+' not supported.'});","                                }","                                if(!consent) {","                                    req.session.scopes[scope] = {ismember: false, explain: self.settings.scopes[scope]};","                                    innerDef.resolve(true);","                                } else {","                                    var inScope = consent.scopes.indexOf(scope) !== -1;","                                    req.session.scopes[scope] = {ismember: inScope, explain: self.settings.scopes[scope]};","                                    innerDef.resolve(!inScope);","                                }","                                promises.push(innerDef.promise);","                            });","","                            Q.allSettled(promises).then(function(results){","                                var redirect = false;","                                for(var i = 0; i<results.length; i++) {","                                    if(results[i].value) {","                                        redirect = true;","                                        break;","                                    }","                                }","                                if(redirect) {","                                    req.session.client_key = params.client_id;","                                    var q = req.path+'?'+querystring.stringify(params);","                                    deferred.reject({type: 'redirect', uri: self.settings.consent_url+'?'+querystring.stringify({return_url: q})});","                                } else {","                                    deferred.resolve(params);","                                }","                            });","                    });","","                    return deferred.promise;","                }).then(function(params){","                    //Step 5: create responses","                    if(params.response_type == 'none') {","                        return {params: params, resp: {}};","                    } else {","                        var deferred = Q.defer();","                        var promises = [];","","                        var rts = params.response_type.split(' ');","","                        rts.forEach(function(rt) {","                            var def = Q.defer();","                            promises.push(def.promise);","                            switch(rt) {","                            case 'code':","                                var createToken = function() {","                                    var token = crypto.createHash('md5').update(params.client_id).update(Math.random()+'').digest('hex');","                                    req.model.auth.findOne({code: token}, function(err, auth){","                                        if(!auth) {","                                            setToken(token);","                                        } else {","                                            createToken();","                                        }","                                    });","                                };","                                var setToken = function(token) {","                                    req.model.auth.create({","                                        client: req.session.client_id,","                                        scope: params.scope.split(' '),","                                        user: req.session.user,","                                        sub: req.session.sub||req.session.user,","                                        code: token,","                                        redirectUri: params.redirect_uri,","                                        responseType: params.response_type,","                                        status: 'created'","                                    }).exec(function(err, auth) {","                                        if(!err && auth) {","                                            setTimeout(function() {","                                                req.model.auth.findOne({code: token}, function(err, auth) {","                                                    if(auth && auth.status == 'created') {","                                                        auth.destroy();","                                                    }","                                                });","                                            }, 1000*60*10); //10 minutes","                                            def.resolve({code: token});","                                        } else {","                                            def.reject(err||'Could not create auth');","                                        }","                                    });","","                                };","                                createToken();","                                break;","                            case 'id_token':","                                var d = Math.round(new Date().getTime()/1000);","                                //var id_token = {","                                def.resolve({id_token: {","                                        iss: req.protocol+'://'+req.headers.host,","                                        sub: req.session.sub||req.session.user,","                                        aud: params.client_id,","                                        exp: d+3600,","                                        iat: d,","                                        nonce: params.nonce","                                }});","                                //def.resolve({id_token: jwt.encode(id_token, req.session.client_secret)});","                                break;","                            case 'token':","                                var createToken = function() {","                                    var token = crypto.createHash('md5').update(params.client_id).update(Math.random()+'').digest('hex');","                                    req.model.access.findOne({token: token}, function(err, access) {","                                        if(!access) {","                                            setToken(token);","                                        } else {","                                            createToken();","                                        }","                                    });","                                };","                                var setToken = function(token) {","                                    var obj = {","                                            token: token,","                                            type: 'Bearer',","                                            expiresIn: 3600,","                                            user: req.session.user,","                                            client: req.session.client_id,","                                            scope: params.scope.split(' ')","                                    };","                                    req.model.access.create(obj, function(err, access) {","                                        if(!err && access) {","                                            setTimeout(function() {","                                                access.destroy();","                                            }, 1000*3600); //1 hour","","                                            def.resolve({","                                                access_token: obj.token,","                                                token_type: obj.type,","                                                expires_in: obj.expiresIn","                                            });","                                        }","                                    });","                                };","                                createToken();","                                break;","                            }","                        });","","                        Q.allSettled(promises).then(function(results) {","                            var resp = {};","                            for(var i in results) {","                                resp = extend(resp, results[i].value||{});","                            }","                            if(resp.access_token && resp.id_token) {","                                var hbuf = crypto.createHmac('sha256', req.session.client_secret).update(resp.access_token).digest();","                                resp.id_token.at_hash = base64url(hbuf.toString('ascii', 0, hbuf.length/2));","                                resp.id_token = jwt.encode(resp.id_token, req.session.client_secret);","                            }","                            deferred.resolve({params: params, type: params.response_type != 'code'?'f':'q', resp: resp});","                        });","","                        return deferred.promise;","                    }","                })","                .then(function(obj) {","                    var params = obj.params;","                    var resp = obj.resp;","                    var uri = url.parse(params.redirect_uri, true);","                    if(params.state) {","                        resp.state = params.state;","                    }","                    if(params.redirect_uri) {","                        if(obj.type == 'f') {","                            uri.hash = querystring.stringify(resp);","                        } else {","                            uri.query = resp;","                        }","                        res.redirect(url.format(uri));","                    }","                })","                .fail(function(error) {","                    if(error.type == 'error') {","                        self.errorHandle(res, error.uri, error.error, error.msg);","                    } else {","                        res.redirect(error.uri);","                    }","                });","            }","            ];","};","","/**"," * consent"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.post('/consent', oidc.consent());"," *"," * This method saves the consent of the resource owner to a client request, or returns an access_denied error."," *"," */","OpenIDConnect.prototype.consent = function() {","    var self = this;","    return [self.use('consent'),","    function(req, res, next) {","        var accept = req.param('accept');","        var return_url = req.param('return_url');","        //var client_id = req.query.client_id || req.body.client_id || false;","        if(accept) {","            var scopes = [];","            for(var i in req.session.scopes) {","                scopes.push(i);","            }","            req.model.consent.destroy({user: req.session.user, client: req.session.client_id}, function(err, result) {","                req.model.consent.create({user: req.session.user, client: req.session.client_id, scopes: scopes}, function(err, consent) {","                    res.redirect(return_url);","                });","            });","        } else {","            var returl = url.parse(return_url, true);","            var redirect_uri = returl.query.redirect_uri;","            self.errorHandle(res, redirect_uri, 'access_denied', 'Resource Owner denied Access.');","        }","    }];","};","","","/**"," * token"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.get('/token', oidc.token());"," *"," * This is the token endpoint, as described in http://tools.ietf.org/html/rfc6749#section-3.2"," *"," */","OpenIDConnect.prototype.token = function() {","    var self = this;","    var spec = {","            grant_type: true,","            code: false,","            redirect_uri: false,","            refresh_token: false,","            scope: false","    };","","    return [","        function(req, res, next) {","            self.endpointParams(spec, req, res, next)","        },","","        self.use({policies: {loggedIn: false}, models:['client', 'consent', 'auth', 'access', 'refresh']}),","","        function(req, res, next) {","            var params = req.parsedParams;","","            var client_key = req.body.client_id;","            var client_secret = req.body.client_secret;","","            if(!client_key || !client_secret) {","                var authorization = parse_authorization(req.headers.authorization);","                if(authorization) {","                    client_key = authorization[0];","                    client_secret = authorization[1];","                }","            }","            if(!client_key || !client_secret) {","                self.errorHandle(res, params.redirect_uri, 'invalid_client', 'No client credentials found.');","            } else {","","                Q.fcall(function() {","                    //Step 2: check if client and secret are valid","                    var deferred = Q.defer();","                    req.model.client.findOne({key: client_key, secret: client_secret}, function(err, client){","                        if(err || !client) {","                            deferred.reject({type: 'error', error: 'invalid_client', msg: 'Client doesn\\'t exist or invalid secret.'});","                        } else {","                            deferred.resolve(client);","                        }","                    });","                    return deferred.promise;","                })","                .then(function(client) {","","                    var deferred = Q.defer();","","                    switch(params.grant_type) {","                    //Client is trying to exchange an authorization code for an access token","                    case \"authorization_code\":","                        //Step 3: check if code is valid and not used previously","                        req.model.auth.findOne({code: params.code})","                        .populate('accessTokens')","                        .populate('refreshTokens')","                        .populate('client')","                        .exec(function(err, auth) {","                            if(!err && auth) {","                                if(auth.status != 'created') {","                                    auth.refresh.forEach(function(refresh) {","                                        refresh.destroy();","                                    });","                                    auth.access.forEach(function(access) {","                                        access.destroy();","                                    });","                                    auth.destroy();","                                    deferred.reject({type: 'error', error: 'invalid_grant', msg: 'Authorization code already used.'});","                                } else {","                                    //obj.auth = a;","                                    deferred.resolve({auth: auth, scope: auth.scope, client: client, user: auth.user, sub: auth.sub});","                                }","                            } else {","                                deferred.reject({type: 'error', error: 'invalid_grant', msg: 'Authorization code is invalid.'});","                            }","                        });","","                        //Extra checks, required if grant_type is 'authorization_code'","                        return deferred.promise.then(function(obj){","                            //Step 4: check if grant_type is valid","","                            if(obj.auth.responseType != 'code') {","                                throw {type: 'error', error: 'unauthorized_client', msg: 'Client cannot use this grant type.'};","                            }","","                            //Step 5: check if redirect_uri is valid","                            if((obj.auth.redirectUri || params.redirect_uri) && obj.auth.redirectUri != params.redirect_uri) {","                                throw {type: 'error', error: 'invalid_grant', msg: 'Redirection URI does not match.'};","                            }","","                            return obj;","                        });","","                        break;","","                        //Client is trying to exchange a refresh token for an access token","                    case \"refresh_token\":","","                        //Step 3: check if refresh token is valid and not used previously","                        req.model.refresh.findOne({token: params.refresh_token}, function(err, refresh) {","                            if(!err && refresh) {","                                req.model.auth.findOne({id: refresh.auth})","\t                            .populate('accessTokens')","\t                            .populate('refreshTokens')","                                .populate('client')","                                .exec(function(err, auth) {","                                    if(refresh.status != 'created') {","                                        auth.access.forEach(function(access){","                                            access.destroy();","                                        });","                                        auth.refresh.forEach(function(refresh){","                                            refresh.destroy();","                                        });","                                        auth.destroy();","                                        deferred.reject({type: 'error', error: 'invalid_grant', msg: 'Refresh token already used.'});","                                    } else {","                                        refresh.status = 'used';","                                        refresh.save();","                                        deferred.resolve({auth: auth, client: client, user: auth.user, sub: auth.sub});","                                    }","                                });","                            } else {","                                deferred.reject({type: 'error', error: 'invalid_grant', msg: 'Refresh token is not valid.'});","                            }","                        });","                        return deferred.promise.then(function(obj){","                            if(params.scope) {","                                var scopes = params.scope.split(' ');","                                if(scopes.length) {","                                    scopes.forEach(function(scope) {","                                        if(obj.auth.scope.indexOf(scope) == -1) {","                                            throw {type: 'error', uri: params.redirect_uri, error: 'invalid_scope', msg: 'Scope '+scope+' was not granted for this token.'};","                                        }","                                    });","                                    obj.scope = scopes;","                                }","                            } else {","                                obj.scope = obj.auth.scope;","                            }","","                            return obj;","                        });","                        break;","                    case 'client_credentials':","                        if(!client.credentialsFlow) {","                            deferred.reject({type: 'error', error: 'unauthorized_client', msg: 'Client cannot use this grant type.'});","                        } else {","                            deferred.resolve({scope: params.scope, auth: false, client: client});","                        }","                        return deferred.promise;","                        break;","                    }","","                })","                .then(function(obj) {","                    //Check if code was issued for client","                    if(params.grant_type != 'client_credentials' && obj.auth.client.key != client_key) {","                        throw {type: 'error', error: 'invalid_grant', msg: 'The code was not issued for this client.'};","                    }","","                    return obj;","","                })","                .then(function(prev){","                    //Create access token","                    /*var scopes = obj.scope;","                    var auth = obj.auth;*/","","                    var createToken = function(model, cb) {","                        var token = crypto.createHash('md5').update(Math.random()+'').digest('hex');","                        model.findOne({token: token}, function(err, response) {","                            if(!response) {","                                cb(token);","                            } else {","                                createToken(model, cb);","                            }","                        });","                    };","                    var setToken = function(access, refresh) {","                        req.model.refresh.create({","                            token: refresh,","                            scope: prev.scope,","                            status: 'created',","                            auth: prev.auth?prev.auth.id:null","                        },","                        function(err, refresh) {","                            setTimeout(function() {","                                refresh.destroy();","                                if(refresh.auth) {","                                    req.model.auth.findOne({id: refresh.auth})","\t\t                            .populate('accessTokens')","\t\t                            .populate('refreshTokens')","                                    .exec(function(err, auth) {","                                        if(auth && !auth.access.length && !auth.refresh.length) {","                                            auth.destroy();","                                        }","                                    });","                                }","                            }, 1000*3600*5); //5 hours","","                            var d = Math.round(new Date().getTime()/1000);","                            var id_token = {","                                    iss: req.protocol+'://'+req.headers.host,","                                    sub: prev.sub||prev.user||null,","                                    aud: prev.client.key,","                                    exp: d+3600,","                                    iat: d","                            };","                            req.model.access.create({","                                    token: access,","                                    type: 'Bearer',","                                    expiresIn: 3600,","                                    user: prev.user||null,","                                    client: prev.client.id,","                                    idToken: jwt.encode(id_token, prev.client.secret),","                                    scope: prev.scope,","                                    auth: prev.auth?prev.auth.id:null","                            },","                            function(err, access) {","                                if(!err && access) {","                                    if(prev.auth) {","                                        prev.auth.status = 'used';","                                        prev.auth.save();","                                    }","","                                    setTimeout(function() {","                                        access.destroy();","                                        if(access.auth) {","                                            req.model.auth.findOne({id: access.auth})","\t\t\t\t                            .populate('accessTokens')","\t\t\t\t                            .populate('refreshTokens')","                                            .exec(function(err, auth) {","                                                if(auth && !auth.access.length && !auth.refresh.length) {","                                                    auth.destroy();","                                                }","                                            });","                                        }","                                    }, 1000*3600); //1 hour","","                                    res.json({","                                        access_token: access.token,","                                        token_type: access.type,","                                        expires_in: access.expiresIn,","                                        refresh_token: refresh.token,","                                        id_token: access.idToken","                                    });","                                }","                            });","                        });","                    };","                    createToken(req.model.access, function(access) {","                        createToken(req.model.refresh, function(refresh){","                            setToken(access, refresh);","                        });","                    });","                })","                .fail(function(error) {","                    if(error.type == 'error') {","                        self.errorHandle(res, params.redirect_uri, error.error, error.msg);","                    } else {","                        res.redirect(error.uri);","                    }","                });","            }","    }];","};","","","/**"," * check"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.get('/api/user', oidc.check('openid', /profile|email/), function(req, res, next) { ... });"," *"," * If no arguments are given, checks if access token is valid."," *"," * The other arguments may be of type string or regexp."," *"," * This function is used to check if user logged in, if an access_token is present, and if certain scopes where granted to it."," */","OpenIDConnect.prototype.check = function() {","    //Seguir desde acá!!!!","    var scopes = Array.prototype.slice.call(arguments, 0);","    if(!util.isArray(scopes)) {","        scopes = [scopes];","    }","    var self = this;","    spec = {","            access_token: false","    };","","    return [","        function(req, res, next) {","            self.endpointParams(spec, req, res, next);","        },","        self.use({policies: {loggedIn: false}, models:['access', 'auth']}),","        function(req, res, next) {","            var params = req.parsedParams;","            if(!scopes.length) {","                next();","            } else {","                if(!params.access_token) {","                    params.access_token = (req.headers['authorization'] || '').indexOf('Bearer ') === 0 ? req.headers['authorization'].replace('Bearer', '').trim() : false;","                }","                if(params.access_token) {","                    req.model.access.findOne({token: params.access_token})","                    .exec(function(err, access) {","                        if(!err && access) {","                                var errors = [];","","                                scopes.forEach(function(scope) {","                                    if(typeof scope == 'string') {","                                        if(access.scope.indexOf(scope) == -1) {","                                            errors.push(scope);","                                        }","                                    } else if(util.isRegExp(scope)) {","                                        var inS = false;","                                        access.scope.forEach(function(s){","                                            if(scope.test(s)) {","                                                inS = true;","                                            }","                                        });","                                        !inS && errors.push('('+scope.toString().replace(/\\//g,'')+')');","                                    }","                                });","                                if(errors.length > 1) {","                                    var last = errors.pop();","                                    self.errorHandle(res, null, 'invalid_scope', 'Required scopes '+errors.join(', ')+' and '+last+' where not granted.');","                                } else if(errors.length > 0) {","                                    self.errorHandle(res, null, 'invalid_scope', 'Required scope '+errors.pop()+' not granted.');","                                } else {","                                    req.check = req.check||{};","                                    req.check.scopes = access.scope;","                                    next();","                                }","                        } else {","                            self.errorHandle(res, null, 'unauthorized_client', 'Access token is not valid.');","                        }","                    });","                } else {","                    self.errorHandle(res, null, 'unauthorized_client', 'No access token found.');","                }","            }","        }","    ];","};","","/**"," * userInfo"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.get('/api/user', oidc.userInfo());"," *"," * This function returns the user info in a json object. Checks for scope and login are included."," */","OpenIDConnect.prototype.userInfo = function() {","    var self = this;","    return [","            self.check('openid', /profile|email/),","            self.use({policies: {loggedIn: false}, models: ['access', 'user']}),","            function(req, res, next) {","                req.model.access.findOne({token: req.parsedParams.access_token})","                .exec(function(err, access) {","                    if(!err && access) {","                        req.model.user.findOne({id: access.user}, function(err, user) {","                            if(req.check.scopes.indexOf('profile') != -1) {","                                user.sub = req.session.sub||req.session.user;","                                delete user.id;","                                delete user.password;","                                delete user.openidProvider;","                                res.json(user);","                            } else {","                                res.json({email: user.email});","                            }","                        });","                    } else {","                        self.errorHandle(res, null, 'unauthorized_client', 'Access token is not valid.');","                    }","                });","    }];","};","","/**"," * removetokens"," *"," * returns a function to be placed as middleware in connect/express routing methods. For example:"," *"," * app.get('/logout', oidc.removetokens(), function(req, res, next) { ... });"," *"," * this function removes all tokens that were issued to the user"," * access_token is required either as a parameter or as a Bearer token"," */","OpenIDConnect.prototype.removetokens = function() {","    var self = this,","        spec = {","            access_token: false //parameter not mandatory","        };","","    return [","            function(req, res, next) {","                self.endpointParams(spec, req, res, next);","            },","            self.use({policies: {loggedIn: false}, models: ['access','auth']}),","            function(req, res, next) {","                var params = req.parsedParams;","","                if(!params.access_token) {","                    params.access_token = (req.headers['authorization'] || '').indexOf('Bearer ') === 0 ? req.headers['authorization'].replace('Bearer', '').trim() : false;","                }","                if(params.access_token) {","                    //Delete the provided access token, and other tokens issued to the user","                    req.model.access.findOne({token: params.access_token})","                    .exec(function(err, access) {","                        if(!err && access) {","                            req.model.auth.findOne({user: access.user})","                            .populate('accessTokens')","                            .populate('refreshTokens')","                            .exec(function(err, auth) {","                                if(!err && auth) {","                                    auth.accessTokens.forEach(function(access){","                                        access.destroy();","                                    });","                                    auth.refreshTokens.forEach(function(refresh){","                                        refresh.destroy();","                                    });","                                    auth.destroy();","                                };","                                req.model.access.find({user:access.user})","                                .exec(function(err,accesses){","                                    if(!err && accesses) {","                                        accesses.forEach(function(access) {","                                            access.destroy();","                                        });","                                    };","                                    return next();","                                });","                            });","                        } else {","                            self.errorHandle(res, null, 'unauthorized_client', 'Access token is not valid.');","                        }","                    });","                } else {","                    self.errorHandle(res, null, 'unauthorized_client', 'No access token found.');","                }","            }","            ];","};","","exports.oidc = function(options) {","    return new OpenIDConnect(options);","};","","exports.defaults = function() {","    return defaults;","}",""],"l":{"9":1,"26":1,"39":0,"40":0,"42":0,"43":0,"74":0,"75":0,"76":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"88":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"99":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"193":1,"194":0,"195":0,"197":0,"199":0,"200":0,"202":0,"205":0,"206":0,"208":0,"209":0,"211":0,"214":1,"215":0,"218":0,"220":0,"221":0,"224":0,"225":0,"226":0,"230":0,"231":0,"232":0,"233":0,"237":0,"247":1,"249":1,"250":0,"253":1,"254":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"264":0,"265":0,"266":0,"268":0,"269":0,"270":0,"271":0,"274":0,"275":0,"279":0,"280":0,"281":0,"285":1,"286":0,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"315":0,"319":1,"320":0,"321":0,"322":0,"324":0,"328":1,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"349":0,"350":0,"351":0,"352":0,"354":0,"359":0,"360":0,"363":0,"364":0,"370":0,"386":1,"387":0,"389":0,"391":0,"392":0,"393":0,"395":0,"396":0,"397":0,"399":0,"401":0,"402":0,"403":0,"405":0,"408":0,"410":0,"412":0,"428":1,"429":0,"430":0,"437":0,"449":0,"450":0,"454":0,"457":0,"458":0,"463":0,"466":0,"467":0,"468":0,"469":0,"473":0,"474":0,"475":0,"477":0,"478":0,"479":0,"483":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"497":0,"498":0,"499":0,"501":0,"502":0,"503":0,"505":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"516":0,"517":0,"518":0,"519":0,"521":0,"526":0,"529":0,"530":0,"532":0,"533":0,"535":0,"537":0,"538":0,"539":0,"540":0,"542":0,"543":0,"544":0,"545":0,"546":0,"548":0,"552":0,"553":0,"563":0,"564":0,"565":0,"566":0,"567":0,"571":0,"573":0,"578":0,"579":0,"581":0,"583":0,"592":0,"594":0,"595":0,"596":0,"597":0,"598":0,"600":0,"604":0,"605":0,"613":0,"614":0,"615":0,"616":0,"619":0,"627":0,"628":0,"632":0,"633":0,"634":0,"635":0,"637":0,"638":0,"639":0,"640":0,"642":0,"645":0,"649":0,"650":0,"651":0,"652":0,"653":0,"655":0,"656":0,"657":0,"659":0,"661":0,"665":0,"666":0,"668":0,"685":1,"686":0,"687":0,"689":0,"690":0,"692":0,"693":0,"694":0,"695":0,"697":0,"698":0,"699":0,"703":0,"704":0,"705":0,"721":1,"722":0,"723":0,"731":0,"733":0,"739":0,"741":0,"742":0,"744":0,"745":0,"746":0,"747":0,"748":0,"751":0,"752":0,"755":0,"757":0,"758":0,"759":0,"760":0,"762":0,"765":0,"769":0,"771":0,"775":0,"780":0,"781":0,"782":0,"783":0,"785":0,"786":0,"788":0,"789":0,"792":0,"795":0,"800":0,"803":0,"804":0,"808":0,"809":0,"812":0,"815":0,"821":0,"822":0,"823":0,"828":0,"829":0,"830":0,"832":0,"833":0,"835":0,"836":0,"838":0,"839":0,"840":0,"844":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"856":0,"859":0,"862":0,"864":0,"866":0,"867":0,"869":0,"871":0,"872":0,"878":0,"879":0,"882":0,"890":0,"891":0,"892":0,"893":0,"894":0,"896":0,"900":0,"901":0,"908":0,"909":0,"910":0,"911":0,"915":0,"916":0,"922":0,"923":0,"930":0,"941":0,"942":0,"943":0,"944":0,"947":0,"948":0,"949":0,"950":0,"954":0,"955":0,"961":0,"972":0,"973":0,"974":0,"979":0,"980":0,"982":0,"1003":1,"1005":0,"1006":0,"1007":0,"1009":0,"1010":0,"1014":0,"1016":0,"1020":0,"1021":0,"1022":0,"1024":0,"1025":0,"1027":0,"1028":0,"1030":0,"1031":0,"1033":0,"1034":0,"1035":0,"1036":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1045":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1054":0,"1055":0,"1056":0,"1059":0,"1063":0,"1079":1,"1080":0,"1081":0,"1085":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1096":0,"1100":0,"1116":1,"1117":0,"1122":0,"1124":0,"1128":0,"1130":0,"1131":0,"1133":0,"1135":0,"1137":0,"1138":0,"1142":0,"1143":0,"1144":0,"1146":0,"1147":0,"1149":0,"1151":0,"1153":0,"1154":0,"1155":0,"1158":0,"1162":0,"1166":0,"1172":1,"1173":0,"1176":1,"1177":0}}}